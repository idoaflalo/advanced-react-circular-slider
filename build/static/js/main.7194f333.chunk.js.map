{"version":3,"sources":["hooks/useIsServer.ts","Knob/index.tsx","mapping/fractions.ts","Labels/index.tsx","redux/reducer.ts","Svg/index.tsx","CircularSlider/index.tsx","App.tsx","index.tsx"],"names":["useIsServer","useState","isServer","setIsServer","useEffect","Knob","knobRef","isDragging","knobPosition","knobColor","knobSize","hideKnob","onMouseDown","onMouseUp","children","styles","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","transformOrigin","animationTimingFunction","animationDuration","animationIterationCount","animationName","hide","opacity","style","transform","x","y","onTouchStart","onTouchEnd","ref","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","FRACTIONS","getInteger","value","Math","floor","getFraction","valueStr","toFixed","key","fraction","endsWith","Labels","labelColor","secondaryLabelColor","labelBottom","labelFontFamily","labelFontSize","valueFontSize","appendToValue","prependToValue","verticalOffset","hideLabelValue","selected","labelTop","labels","display","flexDirection","justifyContent","alignItems","userSelect","color","fontFamily","fontSize","bottomMargin","marginBottom","appended","right","prepended","secondaryText","mainLabel","padding","integer","undefined","reducer","state","action","type","payload","Error","Svg","limit","label","roundLabelColor","roundLabelFontSize","labelOffset","activeLabelColor","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","doubleLineColor","doubleLineType","progressSize","trackSize","svgFullPath","radiansOffset","progressLineCap","offsetAngle","data","activedItem","onLableClick","svg","path","doubleLine","text","textAnchor","title","transition","activedTitle","fontWeight","doubleTrackRef","React","useRef","halfTrack","doubleTrack","contentBorder","maxValue","curveRadian","angleUnit","length","getValue","el","totalValue","current","getTotalLength","overflow","id","x1","x2","offset","stopColor","className","strokeWidth","strokeLinecap","d","map","item","showLabel","href","startOffset","onClick","spreadDegrees","knobOffset","PI","bottom","getOffsetRideans","getSliderRotation","number","getRadians","degrees","CircularSlider","min","max","step","labelStep","knobDraggable","knobEl","dataIndex","magentTolerance","renderLabelValue","onChange","contentWidth","initialState","mounted","radius","radians","dashFullArray","dashFullOffset","circularSlider","lastAngle","dragable","useReducer","dispatch","setActived","updatedKey","updateState","setKnobPosition","useCallback","offsetRadians","newDegree","pt","getPointAtLength","round","dashOffset","pointsInCircle","currentPosition","currentPoint","ceil","closestPointDegrees","abs","random","event","onMouseMove","passive","preventDefault","touch","changedTouches","offsetRelativeToDocument","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","num","push","toString","generateRange","firstItem","updatedIndex","dataArrayLength","knobPositionIndex","sanitizedLabel","replace","margin","maxWidth","touchAction","onMouseLeave","onTouchMove","App","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7194f333.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useIsServer = () => {\r\n    const [isServer, setIsServer] = useState(true)\r\n    useEffect(() => {\r\n        setIsServer(false)\r\n    }, [])\r\n    return isServer\r\n}\r\n\r\nexport default useIsServer;","import React, { FC } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Knob: FC<Props> = ({ knobRef, isDragging, knobPosition, knobColor, knobSize, hideKnob, onMouseDown, onMouseUp, children }) => {\r\n  const styles: { [key: string]: React.CSSProperties } = {\r\n    knob: {\r\n      position: \"absolute\",\r\n      left: `-${knobSize / 2}px`,\r\n      top: `-${knobSize / 2}px`,\r\n      cursor: \"grab\",\r\n      zIndex: 20,\r\n    },\r\n\r\n    dragging: {\r\n      cursor: \"grabbing\",\r\n    },\r\n\r\n    pause: {\r\n      animationPlayState: \"paused\",\r\n    },\r\n\r\n    animation: {\r\n      transformOrigin: \"50% 50%\",\r\n      animationTimingFunction: \"ease-out\",\r\n      animationDuration: \"1500ms\",\r\n      animationIterationCount: \"infinite\",\r\n      animationName: \"pulse\",\r\n    },\r\n\r\n    hide: {\r\n      opacity: 0,\r\n    },\r\n  };\r\n\r\n  const defaultKnobIcon = () => {\r\n    return (\r\n      <svg width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 36 36`}>\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\" />\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\" />\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\" />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`,\r\n        ...styles.knob,\r\n        ...(isDragging && styles.dragging),\r\n        ...(hideKnob && styles.hide),\r\n      }}\r\n      onMouseUp={onMouseUp}\r\n      onMouseDown={onMouseDown}\r\n      onTouchStart={onMouseDown}\r\n      onTouchEnd={onMouseUp}\r\n    >\r\n      <svg ref={knobRef} width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 ${knobSize} ${knobSize}`}>\r\n        <circle\r\n          style={{ ...styles.animation, ...(isDragging && styles.pause) }}\r\n          fill={knobColor}\r\n          fillOpacity=\"0.2\"\r\n          stroke=\"none\"\r\n          cx={knobSize / 2}\r\n          cy={knobSize / 2}\r\n          r={knobSize / 2}\r\n        />\r\n        <circle fill={knobColor} stroke=\"none\" cx={knobSize / 2} cy={knobSize / 2} r={(knobSize * 2) / 3 / 2} />\r\n        {children ? children : defaultKnobIcon()}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  knobRef: any;\r\n  isDragging: boolean;\r\n  hideKnob: boolean;\r\n  knobPosition: any;\r\n  knobColor: string;\r\n  knobSize: number;\r\n  trackSize: number;\r\n  children: any;\r\n  onMouseDown: any;\r\n  onMouseUp: any;\r\n}\r\n\r\nexport default Knob;\r\n","const FRACTIONS = [\r\n  [\".25\", \"F\"],\r\n  [\".10\", \"s\"],\r\n  [\".20\", \"J\"],\r\n  [\".30\", \"u\"],\r\n  [\".33\", \"C\"],\r\n  [\".40\", \"K\"],\r\n  [\".50\", \"A\"],\r\n  [\".60\", \"L\"],\r\n  [\".66\", \"D\"],\r\n  [\".70\", \"y\"],\r\n  [\".75\", \"H\"],\r\n  [\".80\", \"M\"],\r\n  [\".90\", \"{\"],\r\n  [\".83\", \"S\"],\r\n  [\".14\", \"U\"],\r\n  [\".28\", \"V\"],\r\n  [\".42\", \"W\"],\r\n  [\".57\", \"X\"],\r\n  [\".71\", \"Y\"],\r\n  [\".85\", \"Z\"],\r\n  [\".12\", \"b\"],\r\n  [\".37\", \"d\"],\r\n  [\".62\", \"f\"],\r\n  [\".87\", \"h\"],\r\n  [\".11\", \"j\"],\r\n  [\".22\", \"k\"],\r\n  [\".44\", \"m\"],\r\n  [\".55\", \"n\"],\r\n  [\".77\", \"p\"],\r\n  [\".88\", \"q\"],\r\n];\r\n\r\nexport function getInteger(value) {\r\n  return Math.floor(value);\r\n}\r\n\r\nexport function getFraction(value) {\r\n  if (!value) return null;\r\n  const valueStr: string = value.toFixed(2);\r\n  for (const [key, fraction] of FRACTIONS) {\r\n    if (valueStr.endsWith(key)) return fraction;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import { getFraction, getInteger } from \"./../mapping/fractions\";\r\nimport React, { FC } from \"react\";\r\n\r\nconst Labels: FC<Props> = ({\r\n  labelColor,\r\n  secondaryLabelColor,\r\n  labelBottom,\r\n  labelFontFamily,\r\n  labelFontSize,\r\n  valueFontSize,\r\n  appendToValue,\r\n  prependToValue,\r\n  verticalOffset,\r\n  hideLabelValue,\r\n  selected,\r\n  labelTop,\r\n}) => {\r\n  const styles: { [key: string]: React.CSSProperties } = {\r\n    labels: {\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      userSelect: \"none\",\r\n      color: labelColor,\r\n      fontFamily: labelFontFamily,\r\n      zIndex: 1,\r\n    },\r\n\r\n    value: {\r\n      fontSize: `${valueFontSize}`,\r\n      position: \"relative\",\r\n    },\r\n\r\n    bottomMargin: {\r\n      marginBottom: `calc(${verticalOffset})`,\r\n    },\r\n\r\n    appended: {\r\n      position: \"absolute\",\r\n      right: \"0\",\r\n      top: \"0\",\r\n      transform: \"translate(100%, 0)\",\r\n    },\r\n\r\n    prepended: {\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      transform: \"translate(-100%, 0)\",\r\n    },\r\n\r\n    secondaryText: {\r\n      color: secondaryLabelColor,\r\n      fontSize: labelFontSize,\r\n    },\r\n\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n\r\n    mainLabel: {\r\n      fontFamily: \"Fraction\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n\r\n    fraction: {\r\n      fontSize: `calc(${valueFontSize} + 2rem)`,\r\n      padding: \"0 2px\",\r\n    }\r\n  };\r\n\r\n  const integer: number = getInteger(selected?.value);\r\n  const fraction: string | null = getFraction(selected?.value);\r\n\r\n  return (\r\n    <div style={{ ...styles.labels, ...(hideLabelValue && styles.hide) }}>\r\n      <div style={styles.secondaryText}>{labelTop}</div>\r\n      <div style={{ ...styles.value, ...(!labelBottom && styles.bottomMargin) }}>\r\n        <code>\r\n          <span style={styles.prepended}>{prependToValue}</span>\r\n          {fraction ? (\r\n            <span style={styles.mainLabel}>\r\n              {integer === 0 && fraction ? \"\" : integer}\r\n              <span style={styles.fraction}>{fraction}</span>\r\n            </span>\r\n          ) : (\r\n            <span style={styles.mainLabel}>\r\n              <span style={styles.fraction}>{\"‎\"}</span>\r\n              {selected?.value}\r\n              <span style={styles.fraction}>{\"‎\"}</span>\r\n            </span>\r\n          )}\r\n\r\n          {selected?.value !== undefined && <span style={styles.appended}>{appendToValue}</span>}\r\n        </code>\r\n      </div>\r\n      <div style={styles.secondaryText}>{labelBottom}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  labelColor: string;\r\n  secondaryLabelColor: string;\r\n  labelBottom: string;\r\n  labelFontFamily: string;\r\n  labelFontSize: string;\r\n  valueFontSize: string;\r\n  appendToValue: string;\r\n  prependToValue: string;\r\n  verticalOffset: string;\r\n  hideLabelValue: boolean;\r\n  selected: any;\r\n  labelTop: string;\r\n}\r\n\r\nexport default Labels;\r\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'init':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'setKnobPosition':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'onMouseDown':\r\n        case 'onMouseUp':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'setInitialKnobPosition':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { getFraction, getInteger } from \"./../mapping/fractions\";\r\nimport React, { FC } from \"react\";\r\n\r\nconst Svg: FC<Props> = ({\r\n  width,\r\n  limit,\r\n  label,\r\n  labelColor,\r\n  roundLabelColor,\r\n  roundLabelFontSize,\r\n  labelFontSize,\r\n  labelOffset,\r\n  activeLabelColor,\r\n  direction,\r\n  strokeDasharray,\r\n  strokeDashoffset,\r\n  progressColorFrom,\r\n  progressColorTo,\r\n  trackColor,\r\n  doubleLineColor,\r\n  doubleLineType,\r\n  progressSize,\r\n  trackSize,\r\n  svgFullPath,\r\n  radiansOffset,\r\n  progressLineCap,\r\n  offsetAngle,\r\n  data,\r\n  activedItem = 0,\r\n  onLableClick,\r\n}) => {\r\n  const styles: { [key: string]: React.CSSProperties } = {\r\n    svg: {\r\n      position: \"relative\",\r\n      zIndex: 2,\r\n    },\r\n    path: {\r\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-1, 1)\" : \"scale(1, 1)\"}`,\r\n      transformOrigin: \"center center\",\r\n    },\r\n    doubleLine: {\r\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-0.9, 0.9)\" : \"scale(0.9, 0.9)\"}`,\r\n      transformOrigin: \"center center\",\r\n    },\r\n    label: {\r\n      transform: \"translateY(20px)\",\r\n    },\r\n    text: {\r\n      textAnchor: \"middle\",\r\n      fontSize: roundLabelFontSize,\r\n      fill: roundLabelColor,\r\n      cursor: \"pointer\",\r\n      userSelect: \"none\",\r\n      fontFamily: \"Fraction\",\r\n      transform: \"rotate(180deg)\",\r\n      transformOrigin: \"center\",\r\n    },\r\n    title: {\r\n      opacity: 0.2,\r\n      transition: \"all 0.3s ease-out\",\r\n    },\r\n    activedTitle: {\r\n      fill: activeLabelColor,\r\n      fontWeight: \"bold\",\r\n      opacity: 1,\r\n      fontSize: `calc(${roundLabelFontSize} + 0.2rem)`,\r\n    },\r\n  };\r\n\r\n  const doubleTrackRef = React.useRef(null);\r\n  const halfTrack = trackSize / 2;\r\n  const doubleTrack = trackSize;\r\n  const contentBorder = trackSize * 2.5;\r\n  const maxValue = (strokeDasharray * (360 - limit)) / 360;\r\n  const curveRadian = width / 2 + labelOffset;\r\n  const angleUnit = data ? limit / data.length : 1;\r\n\r\n  const getValue = (el, type) => {\r\n    const totalValue = el.current?.getTotalLength() || 100;\r\n    if (type === \"track\") {\r\n      return (totalValue * (360 - limit)) / 360;\r\n    } else if (type === \"progress\") {\r\n      return (totalValue * strokeDashoffset) / strokeDasharray;\r\n    }\r\n    return totalValue;\r\n  };\r\n\r\n  const getDoubleLineColor = () => {\r\n    if (doubleLineColor === \"gradiant\") {\r\n      return \"url(#doubleCircle)\";\r\n    } else if (doubleLineColor) {\r\n      return doubleLineColor;\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  return (\r\n    <svg width={`${width}px`} height={`${width}px`} viewBox={`0 0 ${width} ${width}`} overflow=\"visible\" style={styles.svg}>\r\n      <defs>\r\n        <linearGradient id={label} x1=\"100%\" x2=\"0%\">\r\n          <stop offset=\"0%\" stopColor={progressColorFrom} />\r\n          <stop offset=\"100%\" stopColor={progressColorTo} />\r\n        </linearGradient>\r\n      </defs>\r\n      <defs>\r\n        <linearGradient id={\"doubleCircle\"} x1=\"100%\" x2=\"0%\">\r\n          <stop offset=\"0%\" stopColor={\"rgba(67, 255, 131, 0.54)\"} />\r\n          <stop offset=\"25.88%\" stopColor={\"#43FF83\"} />\r\n          <stop offset=\"54.01%\" stopColor={\"#FFF854\"} />\r\n          <stop offset=\"79.01%\" stopColor={\"#FF7878\"} />\r\n          <stop offset=\"100%\" stopColor={\"#FF3737\"} />\r\n        </linearGradient>\r\n      </defs>\r\n\r\n      <path\r\n        className=\"background-circle\"\r\n        style={styles.path}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={maxValue}\r\n        strokeWidth={1}\r\n        stroke={undefined}\r\n        strokeLinecap={progressLineCap}\r\n        fill=\"transparent\"\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - contentBorder}\r\n            a ${width / 2 - contentBorder},${width / 2 - contentBorder} 0 0,1 0,${width - contentBorder * 2}\r\n            a -${width / 2 - contentBorder},-${width / 2 - contentBorder} 0 0,1 0,-${width - contentBorder * 2}\r\n        `}\r\n      />\r\n\r\n      {doubleLineColor && (\r\n        <path\r\n          className=\"double-track\"\r\n          ref={doubleTrackRef}\r\n          style={styles.path}\r\n          strokeDasharray={getValue(doubleTrackRef, undefined)}\r\n          strokeDashoffset={getValue(doubleTrackRef, doubleLineType)}\r\n          strokeWidth={trackSize}\r\n          stroke={getDoubleLineColor()}\r\n          strokeLinecap={progressLineCap}\r\n          fill=\"none\"\r\n          d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - doubleTrack}\r\n            a ${width / 2 - doubleTrack},${width / 2 - doubleTrack} 0 0,1 0,${width - doubleTrack * 2}\r\n            a -${width / 2 - doubleTrack},-${width / 2 - doubleTrack} 0 0,1 0,-${width - doubleTrack * 2}\r\n        `}\r\n        />\r\n      )}\r\n\r\n      <path\r\n        className=\"track-line\"\r\n        style={styles.path}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={maxValue}\r\n        strokeWidth={trackSize}\r\n        stroke={trackColor}\r\n        strokeLinecap={progressLineCap}\r\n        fill=\"none\"\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - halfTrack}\r\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\r\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\r\n        `}\r\n      />\r\n      <path\r\n        style={styles.path}\r\n        ref={svgFullPath}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={strokeDashoffset}\r\n        strokeWidth={progressSize}\r\n        strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\r\n        fill=\"none\"\r\n        stroke={`url(#${label})`}\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - halfTrack}\r\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\r\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\r\n        `}\r\n      />\r\n\r\n      <path\r\n        id=\"circularLabels\"\r\n        d={`\r\n          M ${curveRadian},${curveRadian} m ${-curveRadian}, 0  \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian} \r\n          A ${curveRadian},${curveRadian} 0 0 1 -${curveRadian},0 \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,-${curveRadian} \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian}\r\n        `}\r\n        transform={`translate(${width / 2},${width / 2})`}\r\n        fill=\"none\"\r\n        stroke=\"none\"\r\n      />\r\n\r\n      {data?.map((item, key, { length }) => {\r\n        const integer: number = getInteger(item.value);\r\n        const fraction: string | null = getFraction(item.value);\r\n        return item.showLabel ? (\r\n          <text style={{ ...styles.text, transform: `rotate(${angleUnit * key + angleUnit / 2 - offsetAngle}deg)` }} key={item.key}>\r\n            <textPath\r\n              href=\"#circularLabels\"\r\n              startOffset={`${(angleUnit * ((length - 1) / 2) + angleUnit / 2 - offsetAngle) / 3.6}%`}\r\n              style={{ ...styles.title, ...(activedItem && key === activedItem - 1 && styles.activedTitle) }}\r\n              onClick={() => onLableClick(key + 1)}\r\n            >\r\n              {fraction ? (\r\n                <tspan>\r\n                  {integer === 0 && fraction ? \"\" : integer}\r\n                  {fraction}\r\n                </tspan>\r\n              ) : (\r\n                <tspan>{item.value}</tspan>\r\n              )}\r\n            </textPath>\r\n          </text>\r\n        ) : null;\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  width: number;\r\n  limit: number;\r\n  label: string;\r\n  labelColor: string;\r\n  roundLabelColor: string;\r\n  roundLabelFontSize: string;\r\n  labelFontSize: string;\r\n  labelOffset: number;\r\n  activeLabelColor: string;\r\n  direction: number;\r\n  strokeDasharray: number;\r\n  strokeDashoffset: number;\r\n  progressColorFrom: string;\r\n  progressColorTo: string;\r\n  trackColor: string;\r\n  doubleLineColor: string | null;\r\n  doubleLineType: string;\r\n  progressSize: number;\r\n  trackSize: number;\r\n  svgFullPath: any;\r\n  radiansOffset: number;\r\n  progressLineCap: \"butt\" | \"round\" | \"square\" | \"inherit\" | undefined;\r\n  offsetAngle: number;\r\n  data: any[];\r\n  activedItem: number | null;\r\n  onLableClick: Function;\r\n}\r\n\r\nexport default Svg;\r\n","import window from \"global\";\r\nimport { CircularSliderProps } from \"interfaces\";\r\nimport React, { useCallback, useEffect, useReducer, useRef, FC } from \"react\";\r\nimport \"../fonts\";\r\nimport useIsServer from \"../hooks/useIsServer\";\r\nimport Knob from \"../Knob\";\r\nimport Labels from \"../Labels\";\r\nimport reducer from \"../redux/reducer\";\r\nimport Svg from \"../Svg\";\r\n\r\nconst spreadDegrees = 360;\r\nconst knobOffset = {\r\n  top: Math.PI / 2,\r\n  right: 0,\r\n  bottom: -Math.PI / 2,\r\n  left: -Math.PI,\r\n};\r\n\r\nconst getOffsetRideans = (knobPosition, offsetAngle) => {\r\n  return knobOffset[knobPosition] + (offsetAngle / 180) * Math.PI;\r\n};\r\n\r\nconst getSliderRotation = (number) => {\r\n  if (number < 0) return -1;\r\n  return 1;\r\n};\r\n\r\nconst getRadians = (degrees) => {\r\n  return (degrees * Math.PI) / 180;\r\n};\r\n\r\nconst generateRange = (min, max, step, labelStep) => {\r\n  const data: object[] = [];\r\n  for (let num = min; +num.toFixed(2) <= max; num += step) {\r\n    const key = +num.toFixed(2);\r\n    data.push({ key: key.toString(), value: key, showLabel: key % labelStep === 0 });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst CircularSlider: FC<CircularSliderProps> = ({\r\n  width = 280,\r\n  direction = 1,\r\n  min = 0,\r\n  max = 360,\r\n  step = 0.1,\r\n  labelStep = 1,\r\n  limit = 360,\r\n  offsetAngle = 0,\r\n  knobColor = \"#0076BA\",\r\n  knobSize = 60,\r\n  knobPosition = \"top\",\r\n  hideKnob = false,\r\n  knobDraggable = true,\r\n  knobEl = null,\r\n  labelTop = \"Demo\",\r\n  labelBottom = \"\",\r\n  labelColor = \"#2597D7\",\r\n  secondaryLabelColor = \"#c0c0c0\",\r\n  roundLabelFontSize = \"2rem\",\r\n  roundLabelColor = \"#272b77\",\r\n  labelFontFamily = `\"Segoe UI\", \"Roboto\"`,\r\n  labelFontSize = \"1.5rem\",\r\n  labelOffset = 20,\r\n  activeLabelColor = \"#0076ba\",\r\n  valueFontSize = \"4rem\",\r\n  appendToValue = \"\",\r\n  prependToValue = \"\",\r\n  verticalOffset = \"1.5rem\",\r\n  hideLabelValue = false,\r\n  progressColorFrom = \"#54BFFD\",\r\n  progressColorTo = \"#0378BC\",\r\n  progressSize = 16,\r\n  trackColor = \"#CFE0F4\",\r\n  trackSize = 20,\r\n  doubleLineColor = null,\r\n  doubleLineType = \"progress\",\r\n  data = [],\r\n  dataIndex = 1,\r\n  magentTolerance = 10,\r\n  progressLineCap = \"round\",\r\n  renderLabelValue = null,\r\n  onChange = (value: object) => {},\r\n}) => {\r\n  const contentWidth = width - 2 * labelOffset;\r\n  const initialState = {\r\n    mounted: false,\r\n    isDragging: false,\r\n    contentWidth: contentWidth,\r\n    radius: contentWidth / 2,\r\n    knobPosition: knobPosition,\r\n    label: 0,\r\n    data: data,\r\n    radians: 0,\r\n    offset: 0,\r\n    knob: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    dashFullArray: 0,\r\n    dashFullOffset: 0,\r\n  };\r\n\r\n  const circularSlider = useRef(null);\r\n  const knobRef = useRef<any>(null);\r\n  const svgFullPath = useRef<any>(null);\r\n  const lastAngle = useRef(0);\r\n  const dragable = useRef<boolean | undefined>(undefined);\r\n  const isServer = useIsServer();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [activedItem, setActived] = React.useState<number | null>(null);\r\n  const [updatedKey, updateState] = React.useState<number | null>(null);\r\n\r\n  const setKnobPosition = useCallback(\r\n    (radians) => {\r\n      if (!state.dashFullArray) {\r\n        updateState(Math.random());\r\n        return;\r\n      }\r\n      const offsetRadians = radians + getOffsetRideans(knobPosition, offsetAngle);\r\n      let degrees = (offsetRadians > 0 ? offsetRadians : 2 * Math.PI + offsetRadians) * (spreadDegrees / (2 * Math.PI));\r\n      if (!activedItem && degrees > limit) {\r\n        degrees = 0;\r\n        if (dragable.current === undefined) {\r\n          dragable.current = false;\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (knobPosition === \"bottom\" && degrees > limit) {\r\n        degrees = limit;\r\n        return;\r\n      } else if (knobPosition === \"top\" && degrees < 360 - limit) {\r\n        degrees = 360 - limit;\r\n        return;\r\n      }\r\n\r\n      let newDegree = degrees + limit - offsetAngle;\r\n      newDegree = newDegree > 360 ? newDegree - 360 : newDegree;\r\n      let pt = (svgFullPath.current).getPointAtLength((newDegree * state.dashFullArray) / 360);\r\n      pt.x = Math.round(pt.x);\r\n      pt.y = Math.round(pt.y);\r\n\r\n      // change direction\r\n      let dashOffset = (degrees / spreadDegrees) * state.dashFullArray;\r\n      degrees = getSliderRotation(direction) === -1 ? spreadDegrees - degrees : degrees;\r\n      lastAngle.current = degrees;\r\n      const pointsInCircle = state.data.length / limit;\r\n      const currentPosition = degrees * pointsInCircle;\r\n      let currentPoint = Math.ceil(currentPosition);\r\n\r\n      const closestPointDegrees = Math.max(currentPoint / pointsInCircle - 1 / pointsInCircle / 2, 0);\r\n      if (Math.abs(closestPointDegrees - degrees) <= magentTolerance && state.data[currentPoint - 1]?.showLabel) {\r\n        newDegree = closestPointDegrees + limit - offsetAngle;\r\n        newDegree = newDegree > 360 ? newDegree - 360 : newDegree;\r\n        pt = (svgFullPath.current).getPointAtLength((newDegree * state.dashFullArray) / 360);\r\n        pt.x = Math.round(pt.x);\r\n        pt.y = Math.round(pt.y);\r\n        dashOffset = (closestPointDegrees / spreadDegrees) * state.dashFullArray;\r\n        degrees = getSliderRotation(direction) === -1 ? spreadDegrees - closestPointDegrees : closestPointDegrees;\r\n        setActived(currentPoint);\r\n      } else {\r\n        setActived(0);\r\n      }\r\n      knobRef.current.style = `transform: rotate(${degrees + offsetAngle}deg);`;\r\n\r\n      if (state.data[currentPoint - 1]?.key !== state.label?.key) {\r\n        onChange(state.data[currentPoint - 1]);\r\n      }\r\n\r\n      dispatch({\r\n        type: \"setKnobPosition\",\r\n        payload: {\r\n          dashFullOffset:\r\n            getSliderRotation(direction) === -1 ? dashOffset : (state.dashFullArray || svgFullPath.current.getTotalLength()) - dashOffset,\r\n          label: state.data[currentPoint - 1],\r\n          knob: {\r\n            x: pt.x,\r\n            y: pt.y,\r\n          },\r\n        },\r\n      });\r\n    },\r\n    // eslint-disable-next-line\r\n    [offsetAngle, limit, state.dashFullArray, state.radius, state.data, state.label, knobPosition, trackSize, direction, onChange],\r\n  );\r\n\r\n  const onMouseDown = () => {\r\n    dragable.current = true;\r\n    dispatch({\r\n      type: \"onMouseDown\",\r\n      payload: {\r\n        isDragging: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onMouseUp = (event) => {\r\n    dragable.current && onMouseMove(event);\r\n    dragable.current = false;\r\n    dispatch({\r\n      type: \"onMouseUp\",\r\n      payload: {\r\n        isDragging: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onMouseMove = useCallback(\r\n    (event, passive = false) => {\r\n      if (!dragable.current) return;\r\n\r\n      if (passive) event.preventDefault();\r\n\r\n      const touch = event.changedTouches?.[0];\r\n\r\n      const offsetRelativeToDocument = (ref) => {\r\n        const rect = ref.current.getBoundingClientRect();\r\n        const scrollLeft = !isServer && ((window?.pageXOffset ?? 0) || (document?.documentElement?.scrollLeft ?? 0));\r\n        const scrollTop = !isServer && ((window?.pageYOffset ?? 0) || (document?.documentElement?.scrollTop ?? 0));\r\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n      };\r\n\r\n      const mouseXFromCenter = (touch ? touch.pageX : event.pageX) - (offsetRelativeToDocument(circularSlider).left + state.radius);\r\n      const mouseYFromCenter = (touch ? touch.pageY : event.pageY) - (offsetRelativeToDocument(circularSlider).top + state.radius);\r\n\r\n      const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\r\n\r\n      setKnobPosition(radians);\r\n    },\r\n    [state.radius, setKnobPosition, isServer],\r\n  );\r\n\r\n  // Get svg path length onmount\r\n  useEffect(() => {\r\n    const data = state.data.length ? [...state.data] : [...generateRange(min, max, step, labelStep)];\r\n    const [firstItem] = data;\r\n    dispatch({\r\n      type: \"init\",\r\n      payload: {\r\n        mounted: true,\r\n        data: data,\r\n        label: firstItem,\r\n        dashFullArray: svgFullPath.current.getTotalLength ? svgFullPath.current.getTotalLength() : 0,\r\n      },\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n  }, [max, min]);\r\n\r\n  // Set knob position\r\n  useEffect(() => {\r\n    let updatedIndex = activedItem === null ? dataIndex : activedItem;\r\n    const dataArrayLength = state.data.length;\r\n    const knobPositionIndex = updatedIndex > dataArrayLength ? dataArrayLength : updatedIndex;\r\n\r\n    if (!!dataArrayLength) {\r\n      const pointsInCircle = limit / dataArrayLength;\r\n      const offset = getRadians(pointsInCircle) / 2;\r\n\r\n      dispatch({\r\n        type: \"setInitialKnobPosition\",\r\n        payload: {\r\n          radians: Math.PI / 2 - getOffsetRideans(state.knobPosition, offsetAngle),\r\n          offset,\r\n        },\r\n      });\r\n\r\n      const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\r\n      const radians = getRadians(degrees) - getOffsetRideans(state.knobPosition, offsetAngle);\r\n\r\n      if (!knobPositionIndex) {\r\n        return setKnobPosition(radians);\r\n      }\r\n      return setKnobPosition(radians - offset * getSliderRotation(direction));\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.dashFullArray, state.knobPosition, state.data.length, dataIndex, direction, updatedKey]);\r\n\r\n  const sanitizedLabel = labelTop.replace(/[\\W_]/g, \"_\");\r\n\r\n  const styles: { [key: string]: React.CSSProperties } = {\r\n    circularSlider: {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      opacity: 0,\r\n      transition: \"opacity 0.2s ease-in\",\r\n      margin: `${labelOffset + 25}px`,\r\n      maxWidth: `${width}px`,\r\n    },\r\n    value: {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      zIndex: 3,\r\n    },\r\n    mounted: {\r\n      opacity: 1,\r\n      touchAction: \"none\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ ...styles.circularSlider, ...(state.mounted && styles.mounted) }}\r\n      ref={circularSlider}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n      onMouseDown={onMouseDown}\r\n      onMouseLeave={onMouseUp}\r\n      onTouchMove={onMouseMove}\r\n      onTouchStart={onMouseDown}\r\n      onTouchEnd={onMouseUp}\r\n    >\r\n      <Svg\r\n        width={contentWidth}\r\n        limit={limit}\r\n        label={sanitizedLabel}\r\n        labelOffset={labelOffset}\r\n        direction={direction}\r\n        strokeDasharray={state.dashFullArray}\r\n        strokeDashoffset={state.dashFullOffset || 100}\r\n        svgFullPath={svgFullPath}\r\n        progressSize={progressSize}\r\n        progressColorFrom={progressColorFrom}\r\n        progressColorTo={progressColorTo}\r\n        progressLineCap={progressLineCap}\r\n        doubleLineColor={doubleLineColor}\r\n        doubleLineType={doubleLineType}\r\n        trackColor={trackColor}\r\n        trackSize={trackSize}\r\n        radiansOffset={state.radians}\r\n        offsetAngle={offsetAngle}\r\n        labelColor={labelColor}\r\n        roundLabelColor={roundLabelColor}\r\n        roundLabelFontSize={roundLabelFontSize}\r\n        labelFontSize={labelFontSize}\r\n        activeLabelColor={activeLabelColor}\r\n        data={state.data}\r\n        activedItem={activedItem}\r\n        onLableClick={(id) => {\r\n          setActived(id);\r\n          updateState(Math.random());\r\n        }}\r\n      />\r\n      {knobDraggable && (\r\n        <Knob\r\n          knobRef={knobRef}\r\n          isDragging={state.isDragging}\r\n          knobPosition={{ x: state.knob.x, y: state.knob.y }}\r\n          knobSize={knobSize > trackSize ? knobSize : trackSize}\r\n          knobColor={knobColor}\r\n          trackSize={trackSize}\r\n          hideKnob={hideKnob}\r\n          onMouseDown={onMouseDown}\r\n          onMouseUp={onMouseUp}\r\n        >\r\n          {knobEl}\r\n        </Knob>\r\n      )}\r\n      {renderLabelValue ? (\r\n        <div style={styles.value}>{renderLabelValue}</div>\r\n      ) : (\r\n        <Labels\r\n          labelTop={labelTop}\r\n          labelColor={labelColor}\r\n          secondaryLabelColor={secondaryLabelColor}\r\n          labelBottom={labelBottom}\r\n          labelFontFamily={labelFontFamily}\r\n          labelFontSize={labelFontSize}\r\n          verticalOffset={verticalOffset}\r\n          valueFontSize={valueFontSize}\r\n          appendToValue={appendToValue}\r\n          prependToValue={prependToValue}\r\n          hideLabelValue={hideLabelValue}\r\n          selected={state.label}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircularSlider;\r\n","import React from \"react\";\r\nimport CircularSlider from \"./CircularSlider\";\r\n\r\nconst App = () => {\r\n  const styles = {\r\n    slider: {\r\n      padding: \"2rem\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.slider}>\r\n      <CircularSlider\r\n        labelTop=\"Spoons\"\r\n        labelBottom=\"TBSP\"\r\n        width={300}\r\n        min={1}\r\n        max={4}\r\n        step={0.05}\r\n        labelStep={0.5}\r\n        onChange={console.log}\r\n      ></CircularSlider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}