{"version":3,"sources":["hooks/useIsServer.js","Knob/index.js","Labels/index.js","redux/reducer.js","Svg/index.js","CircularSlider/index.js","App.js","index.js"],"names":["useIsServer","useState","isServer","setIsServer","useEffect","Knob","knobRef","isDragging","knobPosition","knobColor","knobSize","hideKnob","onMouseDown","onMouseUp","children","trackSize","styles","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","transformOrigin","animationTimingFunction","animationDuration","animationIterationCount","animationName","hide","opacity","style","transform","x","y","onTouchStart","onTouchEnd","ref","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","secondaryLabelColor","labelBottom","labelFontSize","valueFontSize","appendToValue","prependToValue","verticalOffset","hideLabelValue","selected","labelTop","labels","display","flexDirection","justifyContent","alignItems","userSelect","color","value","fontSize","bottomMargin","marginBottom","appended","right","prepended","secondaryText","mainLabel","fontFamily","reducer","state","action","type","payload","Error","Svg","limit","label","roundLabelColor","roundLabelFontSize","labelOffset","activeLabelColor","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","doubleLineColor","doubleLineType","progressSize","svgFullPath","radiansOffset","progressLineCap","offsetAngle","data","activedItem","onLableClick","svg","path","doubleLine","text","textAnchor","title","transition","activedTitle","fontWeight","doubleTrackRef","React","useRef","halfTrack","doubleTrack","contentBorder","maxValue","curveRadian","angleUnit","length","getValue","el","totalValue","current","getTotalLength","overflow","id","x1","x2","offset","stopColor","className","strokeWidth","strokeLinecap","d","map","item","key","showLabel","xlinkHref","startOffset","onClick","valueStr","toString","endsWith","Math","floor","convertToFraction","knobOffset","PI","bottom","getOffsetRideans","getSliderRotation","number","getRadians","degrees","CircularSlider","min","max","step","labelStep","knobDraggable","knobEl","dataIndex","magentTolerance","renderLabelValue","onChange","contentWidth","initialState","mounted","radius","radians","dashFullArray","dashFullOffset","circularSlider","lastAngle","dragable","undefined","useReducer","dispatch","setActived","updatedKey","updateState","setKnobPosition","useCallback","offsetRadians","newDegree","pt","getPointAtLength","round","dashOffset","pointsInCircle","currentPosition","currentPoint","ceil","closestPointDegrees","abs","random","event","onMouseMove","passive","preventDefault","touch","changedTouches","offsetRelativeToDocument","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","num","toFixed","push","generateRange","firstItem","updatedIndex","dataArrayLength","knobPositionIndex","sanitizedLabel","replace","margin","maxWidth","touchAction","onMouseLeave","onTouchMove","App","padding","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee4a1da8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useIsServer = () => {\r\n    const [isServer, setIsServer] = useState(true)\r\n    useEffect(() => {\r\n        setIsServer(false)\r\n    }, [])\r\n    return isServer\r\n}\r\n\r\nexport default useIsServer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./index.css\";\r\n\r\nconst Knob = ({\r\n  knobRef,\r\n  isDragging,\r\n  knobPosition,\r\n  knobColor,\r\n  knobSize,\r\n  hideKnob,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  trackSize,\r\n  children,\r\n}) => {\r\n  const styles = {\r\n    knob: {\r\n      position: \"absolute\",\r\n      left: `-${knobSize / 2}px`,\r\n      top: `-${knobSize / 2}px`,\r\n      cursor: \"grab\",\r\n      zIndex: 20,\r\n    },\r\n\r\n    dragging: {\r\n      cursor: \"grabbing\",\r\n    },\r\n\r\n    pause: {\r\n      animationPlayState: \"paused\",\r\n    },\r\n\r\n    animation: {\r\n      transformOrigin: \"50% 50%\",\r\n      animationTimingFunction: \"ease-out\",\r\n      animationDuration: \"1500ms\",\r\n      animationIterationCount: \"infinite\",\r\n      animationName: \"pulse\",\r\n    },\r\n\r\n    hide: {\r\n      opacity: 0,\r\n    },\r\n  };\r\n\r\n  const defaultKnobIcon = () => {\r\n    return (\r\n      <svg width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 36 36`}>\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\" />\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\" />\r\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\" />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`,\r\n        ...styles.knob,\r\n        ...(isDragging && styles.dragging),\r\n        ...(hideKnob && styles.hide),\r\n      }}\r\n      onMouseUp={onMouseUp}\r\n      onMouseDown={onMouseDown}\r\n      onTouchStart={onMouseDown}\r\n      onTouchEnd={onMouseUp}\r\n    >\r\n      <svg ref={knobRef} width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 ${knobSize} ${knobSize}`}>\r\n        <circle\r\n          style={{ ...styles.animation, ...(isDragging && styles.pause) }}\r\n          fill={knobColor}\r\n          fillOpacity=\"0.2\"\r\n          stroke=\"none\"\r\n          cx={knobSize / 2}\r\n          cy={knobSize / 2}\r\n          r={knobSize / 2}\r\n        />\r\n        <circle fill={knobColor} stroke=\"none\" cx={knobSize / 2} cy={knobSize / 2} r={(knobSize * 2) / 3 / 2} />\r\n        {children ? children : defaultKnobIcon()}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nKnob.propTypes = {\r\n  isDragging: PropTypes.bool,\r\n  knobPosition: PropTypes.object,\r\n  knobColor: PropTypes.string,\r\n  knobRadius: PropTypes.number,\r\n  knobSize: PropTypes.number,\r\n  trackSize: PropTypes.number,\r\n  children: PropTypes.element,\r\n  onMouseDown: PropTypes.func,\r\n};\r\n\r\nexport default Knob;\r\n","import React from \"react\";\r\nimport PropTypes, { any } from \"prop-types\";\r\n\r\nconst Labels = ({\r\n  labelColor,\r\n  secondaryLabelColor,\r\n  labelBottom,\r\n  labelFontSize,\r\n  valueFontSize,\r\n  appendToValue,\r\n  prependToValue,\r\n  verticalOffset,\r\n  hideLabelValue,\r\n  selected,\r\n  labelTop,\r\n}) => {\r\n  const styles = {\r\n    labels: {\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      userSelect: \"none\",\r\n      color: labelColor,\r\n      zIndex: 1,\r\n    },\r\n    \r\n    value: {\r\n      fontSize: `${valueFontSize}`,\r\n      position: \"relative\",\r\n    },\r\n\r\n    bottomMargin: {\r\n      marginBottom: `calc(${verticalOffset})`,\r\n    },\r\n\r\n    appended: {\r\n      position: \"absolute\",\r\n      right: \"0\",\r\n      top: \"0\",\r\n      transform: \"translate(100%, 0)\",\r\n    },\r\n    \r\n    prepended: {\r\n      position: \"absolute\",\r\n      left: \"0\",\r\n      top: \"0\",\r\n      transform: \"translate(-100%, 0)\",\r\n    },\r\n\r\n    secondaryText: {\r\n      color: secondaryLabelColor,\r\n      fontSize: labelFontSize\r\n    },\r\n\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n\r\n    mainLabel: {\r\n      fontFamily: \"Telex\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ ...styles.labels, ...(hideLabelValue && styles.hide) }}>\r\n      <div style={styles.secondaryText}>{labelTop}</div>\r\n      <div style={{ ...styles.value, ...(!labelBottom && styles.bottomMargin) }}>\r\n        <code>\r\n          <span style={styles.prepended}>{prependToValue}</span>\r\n          <span style={styles.mainLabel}>{selected?.value}</span>\r\n          {selected?.value && <span style={styles.appended}>{appendToValue}</span>}\r\n        </code>\r\n      </div>\r\n      <div style={styles.secondaryText}>{labelBottom}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLabels.propTypes = {\r\n  label: any,\r\n  labelColor: PropTypes.string,\r\n  secondaryLabelColor: PropTypes.string,\r\n  labelBottom: PropTypes.string,\r\n  labelFontSize: PropTypes.string,\r\n  valueFontSize: PropTypes.string,\r\n  appendToValue: PropTypes.string,\r\n  prependToValue: PropTypes.string,\r\n  verticalOffset: PropTypes.string,\r\n  hideLabelValue: PropTypes.bool,\r\n};\r\n\r\nexport default Labels;\r\n","const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'init':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'setKnobPosition':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'onMouseDown':\r\n        case 'onMouseUp':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case 'setInitialKnobPosition':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction convertToFraction(value) {\r\n  const valueStr = value.toString();\r\n  if (valueStr === \"0.25\") return \"¼\";\r\n  if (valueStr === \"0.5\") return \"½\";\r\n  if (valueStr === \"0.75\") return \"¾\";\r\n  if (valueStr.endsWith(\".25\")) return Math.floor(value) + \"¼\";\r\n  if (valueStr.endsWith(\".5\")) return Math.floor(value) + \"½\";\r\n  if (valueStr.endsWith(\".75\")) return Math.floor(value) + \"¾\";\r\n  return valueStr;\r\n}\r\n\r\nconst Svg = ({\r\n  width,\r\n  limit,\r\n  label,\r\n  labelColor,\r\n  roundLabelColor,\r\n  roundLabelFontSize,\r\n  labelFontSize,\r\n  labelOffset,\r\n  activeLabelColor,\r\n  direction,\r\n  strokeDasharray,\r\n  strokeDashoffset,\r\n  progressColorFrom,\r\n  progressColorTo,\r\n  trackColor,\r\n  doubleLineColor,\r\n  doubleLineType,\r\n  progressSize,\r\n  trackSize,\r\n  svgFullPath,\r\n  radiansOffset,\r\n  progressLineCap,\r\n  offsetAngle,\r\n  data,\r\n  activedItem = 0,\r\n  onLableClick,\r\n}) => {\r\n  const styles = {\r\n    svg: {\r\n      position: \"relative\",\r\n      zIndex: 2,\r\n    },\r\n    path: {\r\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-1, 1)\" : \"scale(1, 1)\"}`,\r\n      transformOrigin: \"center center\",\r\n    },\r\n    doubleLine: {\r\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-0.9, 0.9)\" : \"scale(0.9, 0.9)\"}`,\r\n      transformOrigin: \"center center\",\r\n    },\r\n    label: {\r\n      transform: \"translateY(20px)\",\r\n    },\r\n    text: {\r\n      textAnchor: \"middle\",\r\n      fontSize: roundLabelFontSize,\r\n      fill: roundLabelColor,\r\n      cursor: \"pointer\",\r\n      userSelect: \"none\",\r\n      fontFamily: \"Telex\",\r\n      transform: \"rotate(180deg)\",\r\n      transformOrigin: \"center\",\r\n    },\r\n    title: {\r\n      opacity: 0.4,\r\n      transition: \"all 0.3s ease-out\",\r\n    },\r\n    activedTitle: {\r\n      fill: activeLabelColor,\r\n      fontWeight: \"bold\",\r\n      opacity: 1,\r\n      fontSize: `calc(${roundLabelFontSize} + 0.2rem)`,\r\n    },\r\n  };\r\n\r\n  const doubleTrackRef = React.useRef(null);\r\n  const halfTrack = trackSize / 2;\r\n  const doubleTrack = trackSize;\r\n  const contentBorder = trackSize * 2.5;\r\n  const maxValue = (strokeDasharray * (360 - limit)) / 360;\r\n  const curveRadian = width / 2 + labelOffset;\r\n  const angleUnit = data ? limit / data.length : 1;\r\n\r\n  const getValue = (el, type) => {\r\n    const totalValue = el.current?.getTotalLength() || 100;\r\n    if (type === \"track\") {\r\n      return (totalValue * (360 - limit)) / 360;\r\n    } else if (type === \"progress\") {\r\n      return (totalValue * strokeDashoffset) / strokeDasharray;\r\n    }\r\n    return totalValue;\r\n  };\r\n\r\n  const getDoubleLineColor = () => {\r\n    if (doubleLineColor === \"gradiant\") {\r\n      return \"url(#doubleCircle)\";\r\n    } else if (doubleLineColor) {\r\n      return doubleLineColor;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <svg width={`${width}px`} height={`${width}px`} viewBox={`0 0 ${width} ${width}`} overflow=\"visible\" style={styles.svg}>\r\n      <defs>\r\n        <linearGradient id={label} x1=\"100%\" x2=\"0%\">\r\n          <stop offset=\"0%\" stopColor={progressColorFrom} />\r\n          <stop offset=\"100%\" stopColor={progressColorTo} />\r\n        </linearGradient>\r\n      </defs>\r\n      <defs>\r\n        <linearGradient id={\"doubleCircle\"} x1=\"100%\" x2=\"0%\">\r\n          <stop offset=\"0%\" stopColor={\"rgba(67, 255, 131, 0.54)\"} />\r\n          <stop offset=\"25.88%\" stopColor={\"#43FF83\"} />\r\n          <stop offset=\"54.01%\" stopColor={\"#FFF854\"} />\r\n          <stop offset=\"79.01%\" stopColor={\"#FF7878\"} />\r\n          <stop offset=\"100%\" stopColor={\"#FF3737\"} />\r\n        </linearGradient>\r\n      </defs>\r\n\r\n      <path\r\n        className=\"background-circle\"\r\n        style={styles.path}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={maxValue}\r\n        strokeWidth={1}\r\n        stroke={null}\r\n        strokeLinecap={progressLineCap}\r\n        fill=\"transparent\"\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - contentBorder}\r\n            a ${width / 2 - contentBorder},${width / 2 - contentBorder} 0 0,1 0,${width - contentBorder * 2}\r\n            a -${width / 2 - contentBorder},-${width / 2 - contentBorder} 0 0,1 0,-${width - contentBorder * 2}\r\n        `}\r\n      />\r\n\r\n      {doubleLineColor && (\r\n        <path\r\n          className=\"double-track\"\r\n          ref={doubleTrackRef}\r\n          style={styles.path}\r\n          strokeDasharray={getValue(doubleTrackRef)}\r\n          strokeDashoffset={getValue(doubleTrackRef, doubleLineType)}\r\n          strokeWidth={trackSize}\r\n          stroke={getDoubleLineColor()}\r\n          strokeLinecap={progressLineCap}\r\n          fill=\"none\"\r\n          d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - doubleTrack}\r\n            a ${width / 2 - doubleTrack},${width / 2 - doubleTrack} 0 0,1 0,${width - doubleTrack * 2}\r\n            a -${width / 2 - doubleTrack},-${width / 2 - doubleTrack} 0 0,1 0,-${width - doubleTrack * 2}\r\n        `}\r\n        />\r\n      )}\r\n\r\n      <path\r\n        className=\"track-line\"\r\n        style={styles.path}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={maxValue}\r\n        strokeWidth={trackSize}\r\n        stroke={trackColor}\r\n        strokeLinecap={progressLineCap}\r\n        fill=\"none\"\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - halfTrack}\r\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\r\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\r\n        `}\r\n      />\r\n      <path\r\n        style={styles.path}\r\n        ref={svgFullPath}\r\n        strokeDasharray={strokeDasharray}\r\n        strokeDashoffset={strokeDashoffset}\r\n        strokeWidth={progressSize}\r\n        strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\r\n        fill=\"none\"\r\n        stroke={`url(#${label})`}\r\n        d={`\r\n            M ${width / 2}, ${width / 2}\r\n            m 0, -${width / 2 - halfTrack}\r\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\r\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\r\n        `}\r\n      />\r\n\r\n      <path\r\n        id=\"myTextPath\"\r\n        d={`\r\n          M ${curveRadian},${curveRadian} m ${-curveRadian}, 0  \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian} \r\n          A ${curveRadian},${curveRadian} 0 0 1 -${curveRadian},0 \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,-${curveRadian} \r\n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian}\r\n        `}\r\n        transform={`translate(${width / 2},${width / 2})`}\r\n        fill=\"none\"\r\n        stroke=\"none\"\r\n      />\r\n\r\n      <text style={styles.text}>\r\n        {data?.map((item, key) =>\r\n          item.showLabel ? (\r\n            <textPath xlinkHref=\"#myTextPath\" startOffset={`${(angleUnit * key + angleUnit / 2 - offsetAngle) / 3.6}%`} key={item.key}>\r\n              <tspan style={{ ...styles.title, ...(key === activedItem - 1 && styles.activedTitle) }} onClick={() => onLableClick(key + 1)}>\r\n                {convertToFraction(item.value)}\r\n              </tspan>\r\n            </textPath>\r\n          ) : null,\r\n        )}\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nSvg.propTypes = {\r\n  width: PropTypes.number,\r\n  label: PropTypes.string,\r\n  direction: PropTypes.number,\r\n  svgFullPath: PropTypes.object,\r\n  strokeDasharray: PropTypes.number,\r\n  strokeDashoffset: PropTypes.number,\r\n  progressColorFrom: PropTypes.string,\r\n  progressColorTo: PropTypes.string,\r\n  progressLineCap: PropTypes.string,\r\n  progressSize: PropTypes.number,\r\n  trackColor: PropTypes.string,\r\n  trackSize: PropTypes.number,\r\n  radiansOffset: PropTypes.number,\r\n};\r\n\r\nexport default Svg;\r\n","import window from \"global\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useCallback, useEffect, useReducer, useRef } from \"react\";\r\nimport \"../fonts\";\r\nimport useIsServer from \"../hooks/useIsServer\";\r\nimport Knob from \"../Knob\";\r\nimport Labels from \"../Labels\";\r\nimport reducer from \"../redux/reducer\";\r\nimport Svg from \"../Svg\";\r\n\r\nconst spreadDegrees = 360;\r\nconst knobOffset = {\r\n  top: Math.PI / 2,\r\n  right: 0,\r\n  bottom: -Math.PI / 2,\r\n  left: -Math.PI,\r\n};\r\n\r\nconst getOffsetRideans = (knobPosition, offsetAngle) => {\r\n  return knobOffset[knobPosition] + (offsetAngle / 180) * Math.PI;\r\n};\r\n\r\nconst getSliderRotation = (number) => {\r\n  if (number < 0) return -1;\r\n  return 1;\r\n};\r\n\r\nconst getRadians = (degrees) => {\r\n  return (degrees * Math.PI) / 180;\r\n};\r\n\r\nconst generateRange = (min, max, step, labelStep) => {\r\n  const data = [];\r\n  for (let num = min; +num.toFixed(2) <= max; num += step) {\r\n    const key = +num.toFixed(2);\r\n    data.push({ key, value: key.toString(), showLabel: key % labelStep === 0 });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst CircularSlider = ({\r\n  width = 280,\r\n  direction = 1,\r\n  min = 0,\r\n  max = 360,\r\n  step = 0.1,\r\n  labelStep = 1,\r\n  limit = 360,\r\n  offsetAngle = 0,\r\n  knobColor = \"#0076BA\",\r\n  knobSize = 60,\r\n  knobPosition = \"top\",\r\n  hideKnob = false,\r\n  knobDraggable = true,\r\n  knobEl = null,\r\n  labelTop = \"Demo\",\r\n  labelBottom = \"\",\r\n  labelColor = \"#2597D7\",\r\n  secondaryLabelColor = \"#c0c0c0\",\r\n  roundLabelFontSize = \"1.2rem\",\r\n  roundLabelColor = \"#272b77\",\r\n  labelFontSize = \"1.5rem\",\r\n  labelOffset = 20,\r\n  activeLabelColor = \"#0076ba\",\r\n  valueFontSize = \"3rem\",\r\n  appendToValue = \"\",\r\n  prependToValue = \"\",\r\n  verticalOffset = \"1.5rem\",\r\n  hideLabelValue = false,\r\n  progressColorFrom = \"#54BFFD\",\r\n  progressColorTo = \"#0378BC\",\r\n  progressSize = 16,\r\n  trackColor = \"#CFE0F4\",\r\n  trackSize = 20,\r\n  doubleLineColor = null,\r\n  doubleLineType = \"progress\",\r\n  data = [],\r\n  dataIndex = 1,\r\n  magentTolerance = 10,\r\n  progressLineCap = \"round\",\r\n  renderLabelValue = null,\r\n  onChange = (value) => {},\r\n}) => {\r\n  const contentWidth = width - 2 * labelOffset;\r\n  const initialState = {\r\n    mounted: false,\r\n    isDragging: false,\r\n    contentWidth: contentWidth,\r\n    radius: contentWidth / 2,\r\n    knobPosition: knobPosition,\r\n    label: 0,\r\n    data: data,\r\n    radians: 0,\r\n    offset: 0,\r\n    knob: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    dashFullArray: 0,\r\n    dashFullOffset: 0,\r\n  };\r\n\r\n  const circularSlider = useRef(null);\r\n  const knobRef = useRef(null);\r\n  const svgFullPath = useRef(null);\r\n  const lastAngle = useRef(0);\r\n  const dragable = useRef(undefined);\r\n  const isServer = useIsServer();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [activedItem, setActived] = React.useState(null);\r\n  const [updatedKey, updateState] = React.useState(null);\r\n\r\n  const setKnobPosition = useCallback(\r\n    (radians) => {\r\n      if (!state.dashFullArray) {\r\n        updateState(Math.random());\r\n        return;\r\n      }\r\n      const offsetRadians = radians + getOffsetRideans(knobPosition, offsetAngle);\r\n      let degrees = (offsetRadians > 0 ? offsetRadians : 2 * Math.PI + offsetRadians) * (spreadDegrees / (2 * Math.PI));\r\n      if (!activedItem && degrees > limit) {\r\n        degrees = 0;\r\n        if (dragable.current === undefined) {\r\n          dragable.current = false;\r\n        } else {\r\n          return;\r\n        }\r\n      } else if (knobPosition === \"bottom\" && degrees > limit) {\r\n        degrees = limit;\r\n        return;\r\n      } else if (knobPosition === \"top\" && degrees < 360 - limit) {\r\n        degrees = 360 - limit;\r\n        return;\r\n      }\r\n\r\n      let newDegree = degrees + limit - offsetAngle;\r\n      newDegree = newDegree > 360 ? newDegree - 360 : newDegree;\r\n      let pt = svgFullPath.current.getPointAtLength((newDegree * state.dashFullArray) / 360);\r\n      pt.x = Math.round(pt.x);\r\n      pt.y = Math.round(pt.y);\r\n\r\n      // change direction\r\n      let dashOffset = (degrees / spreadDegrees) * state.dashFullArray;\r\n      degrees = getSliderRotation(direction) === -1 ? spreadDegrees - degrees : degrees;\r\n      lastAngle.current = degrees;\r\n      const pointsInCircle = state.data.length / limit;\r\n      const currentPosition = degrees * pointsInCircle;\r\n      let currentPoint = Math.ceil(currentPosition);\r\n\r\n      const closestPointDegrees = Math.max(currentPoint / pointsInCircle - 1 / pointsInCircle / 2, 0);\r\n      if (Math.abs(closestPointDegrees - degrees) <= magentTolerance && state.data[currentPoint - 1]?.showLabel) {\r\n        newDegree = closestPointDegrees + limit - offsetAngle;\r\n        newDegree = newDegree > 360 ? newDegree - 360 : newDegree;\r\n        pt = svgFullPath.current.getPointAtLength((newDegree * state.dashFullArray) / 360);\r\n        pt.x = Math.round(pt.x);\r\n        pt.y = Math.round(pt.y);\r\n        dashOffset = (closestPointDegrees / spreadDegrees) * state.dashFullArray;\r\n        degrees = getSliderRotation(direction) === -1 ? spreadDegrees - closestPointDegrees : closestPointDegrees;\r\n        setActived(currentPoint);\r\n      } else {\r\n        setActived(0);\r\n      }\r\n      knobRef.current.style = `transform: rotate(${degrees + offsetAngle}deg);`;\r\n\r\n      if (state.data[currentPoint - 1]?.key !== state.label?.key) {\r\n        onChange(state.data[currentPoint - 1]);\r\n      }\r\n\r\n      dispatch({\r\n        type: \"setKnobPosition\",\r\n        payload: {\r\n          dashFullOffset:\r\n            getSliderRotation(direction) === -1 ? dashOffset : (state.dashFullArray || svgFullPath.current.getTotalLength()) - dashOffset,\r\n          label: state.data[currentPoint - 1],\r\n          knob: {\r\n            x: pt.x,\r\n            y: pt.y,\r\n          },\r\n        },\r\n      });\r\n    },\r\n    // eslint-disable-next-line\r\n    [offsetAngle, limit, state.dashFullArray, state.radius, state.data, state.label, knobPosition, trackSize, direction, onChange],\r\n  );\r\n\r\n  const onMouseDown = () => {\r\n    dragable.current = true;\r\n    dispatch({\r\n      type: \"onMouseDown\",\r\n      payload: {\r\n        isDragging: true,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onMouseUp = (event) => {\r\n    dragable.current && onMouseMove(event);\r\n    dragable.current = false;\r\n    dispatch({\r\n      type: \"onMouseUp\",\r\n      payload: {\r\n        isDragging: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onMouseMove = useCallback(\r\n    (event, passive = false) => {\r\n      if (!dragable.current) return;\r\n\r\n      if (passive) event.preventDefault();\r\n\r\n      const touch = event.changedTouches?.[0];\r\n\r\n      const offsetRelativeToDocument = (ref) => {\r\n        const rect = ref.current.getBoundingClientRect();\r\n        const scrollLeft = !isServer && ((window?.pageXOffset ?? 0) || (document?.documentElement?.scrollLeft ?? 0));\r\n        const scrollTop = !isServer && ((window?.pageYOffset ?? 0) || (document?.documentElement?.scrollTop ?? 0));\r\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n      };\r\n\r\n      const mouseXFromCenter = (touch ? touch.pageX : event.pageX) - (offsetRelativeToDocument(circularSlider).left + state.radius);\r\n      const mouseYFromCenter = (touch ? touch.pageY : event.pageY) - (offsetRelativeToDocument(circularSlider).top + state.radius);\r\n\r\n      const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\r\n\r\n      setKnobPosition(radians);\r\n    },\r\n    [state.radius, setKnobPosition, isServer],\r\n  );\r\n\r\n  // Get svg path length onmount\r\n  useEffect(() => {\r\n    const data = state.data.length ? [...state.data] : [...generateRange(min, max, step, labelStep)];\r\n    const [firstItem] = data;\r\n    dispatch({\r\n      type: \"init\",\r\n      payload: {\r\n        mounted: true,\r\n        data: data,\r\n        label: firstItem,\r\n        dashFullArray: svgFullPath.current.getTotalLength ? svgFullPath.current.getTotalLength() : 0,\r\n      },\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n  }, [max, min]);\r\n\r\n  // Set knob position\r\n  useEffect(() => {\r\n    let updatedIndex = activedItem === null ? dataIndex : activedItem;\r\n    const dataArrayLength = state.data.length;\r\n    const knobPositionIndex = updatedIndex > dataArrayLength ? dataArrayLength : updatedIndex;\r\n\r\n    if (!!dataArrayLength) {\r\n      const pointsInCircle = limit / dataArrayLength;\r\n      const offset = getRadians(pointsInCircle) / 2;\r\n\r\n      dispatch({\r\n        type: \"setInitialKnobPosition\",\r\n        payload: {\r\n          radians: Math.PI / 2 - getOffsetRideans(state.knobPosition, offsetAngle),\r\n          offset,\r\n        },\r\n      });\r\n\r\n      const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\r\n      const radians = getRadians(degrees) - getOffsetRideans(state.knobPosition, offsetAngle);\r\n\r\n      if (!knobPositionIndex) {\r\n        return setKnobPosition(radians);\r\n      }\r\n      return setKnobPosition(radians - offset * getSliderRotation(direction));\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [state.dashFullArray, state.knobPosition, state.data.length, dataIndex, direction, updatedKey]);\r\n\r\n  const sanitizedLabel = labelTop.replace(/[\\W_]/g, \"_\");\r\n\r\n  const styles = {\r\n    circularSlider: {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      opacity: 0,\r\n      transition: \"opacity 1s ease-in\",\r\n      margin: `${labelOffset + 25}px`,\r\n      maxWidth: `${width}px`,\r\n    },\r\n    value: {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      zIndex: 3,\r\n    },\r\n    mounted: {\r\n      opacity: 1,\r\n      touchAction: \"none\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ ...styles.circularSlider, ...(state.mounted && styles.mounted) }}\r\n      ref={circularSlider}\r\n      onMouseMove={onMouseMove}\r\n      onMouseUp={onMouseUp}\r\n      onMouseDown={onMouseDown}\r\n      onMouseLeave={onMouseUp}\r\n      onTouchMove={onMouseMove}\r\n      onTouchStart={onMouseDown}\r\n      onTouchEnd={onMouseUp}\r\n    >\r\n      <Svg\r\n        width={contentWidth}\r\n        limit={limit}\r\n        max={max}\r\n        label={sanitizedLabel}\r\n        labelOffset={labelOffset}\r\n        direction={direction}\r\n        strokeDasharray={state.dashFullArray}\r\n        strokeDashoffset={state.dashFullOffset || 100}\r\n        svgFullPath={svgFullPath}\r\n        progressSize={progressSize}\r\n        progressColorFrom={progressColorFrom}\r\n        progressColorTo={progressColorTo}\r\n        progressLineCap={progressLineCap}\r\n        doubleLineColor={doubleLineColor}\r\n        doubleLineType={doubleLineType}\r\n        trackColor={trackColor}\r\n        trackSize={trackSize}\r\n        radiansOffset={state.radians}\r\n        offsetAngle={offsetAngle}\r\n        labelColor={labelColor}\r\n        secondaryLabelColor={secondaryLabelColor}\r\n        roundLabelColor={roundLabelColor}\r\n        roundLabelFontSize={roundLabelFontSize}\r\n        labelFontSize={labelFontSize}\r\n        activeLabelColor={activeLabelColor}\r\n        data={state.data}\r\n        activedItem={activedItem}\r\n        onLableClick={(id) => {\r\n          setActived(id);\r\n          updateState(Math.random());\r\n        }}\r\n      />\r\n      {knobDraggable && (\r\n        <Knob\r\n          knobRef={knobRef}\r\n          isDragging={state.isDragging}\r\n          knobPosition={{ x: state.knob.x, y: state.knob.y }}\r\n          knobSize={knobSize > trackSize ? knobSize : trackSize}\r\n          knobColor={knobColor}\r\n          trackSize={trackSize}\r\n          hideKnob={hideKnob}\r\n          onMouseDown={onMouseDown}\r\n          onMouseUp={onMouseUp}\r\n        >\r\n          {knobEl}\r\n        </Knob>\r\n      )}\r\n      {renderLabelValue ? (\r\n        <div style={styles.value}>{renderLabelValue}</div>\r\n      ) : (\r\n        <Labels\r\n          labelTop={labelTop}\r\n          labelColor={labelColor}\r\n          secondaryLabelColor={secondaryLabelColor}\r\n          labelBottom={labelBottom}\r\n          labelFontSize={labelFontSize}\r\n          verticalOffset={verticalOffset}\r\n          valueFontSize={valueFontSize}\r\n          appendToValue={appendToValue}\r\n          prependToValue={prependToValue}\r\n          hideLabelValue={hideLabelValue}\r\n          selected={state.label}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCircularSlider.propTypes = {\r\n  label: PropTypes.string,\r\n  width: PropTypes.number,\r\n  direction: PropTypes.number,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  step: PropTypes.number,\r\n  labelStep: PropTypes.number,\r\n  doubleLineColor: PropTypes.string,\r\n  doubleLineType: PropTypes.string,\r\n  knobColor: PropTypes.string,\r\n  knobPosition: PropTypes.string,\r\n  hideKnob: PropTypes.bool,\r\n  knobDraggable: PropTypes.bool,\r\n  knobEl: PropTypes.element,\r\n  labelColor: PropTypes.string,\r\n  secondaryLabelColor: PropTypes.string,\r\n  roundLabelColor: PropTypes.string,\r\n  labelBottom: PropTypes.string,\r\n  labelFontSize: PropTypes.string,\r\n  roundLabelFontSize: PropTypes.string,\r\n  valueFontSize: PropTypes.string,\r\n  appendToValue: PropTypes.string,\r\n  renderLabelValue: PropTypes.element,\r\n  prependToValue: PropTypes.string,\r\n  verticalOffset: PropTypes.string,\r\n  hideLabelValue: PropTypes.bool,\r\n  progressLineCap: PropTypes.string,\r\n  progressColorFrom: PropTypes.string,\r\n  progressColorTo: PropTypes.string,\r\n  progressSize: PropTypes.number,\r\n  trackColor: PropTypes.string,\r\n  trackSize: PropTypes.number,\r\n  data: PropTypes.array,\r\n  dataIndex: PropTypes.number,\r\n  magentTolerance: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default CircularSlider;\r\n","import React from \"react\";\r\nimport CircularSlider from \"./CircularSlider\";\r\n\r\nconst App = () => {\r\n  const styles = {\r\n    slider: {\r\n      padding: \"2rem\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={styles.slider}>\r\n      <CircularSlider\r\n        labelTop=\"Spoons\"\r\n        labelBottom=\"TBSP\"\r\n        width={300}\r\n        min={0}\r\n        max={4}\r\n        step={0.1}\r\n        labelStep={0.5}\r\n        onChange={console.log}\r\n      ></CircularSlider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}