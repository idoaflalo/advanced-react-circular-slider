{"version":3,"sources":["redux/reducer.js","hooks/useIsServer.js","Knob/index.js","Labels/index.js","Svg/index.js","CircularSlider/index.js","assets/slide.svg","App.js","index.js"],"names":["reducer","state","action","type","payload","Error","useIsServer","useState","isServer","setIsServer","useEffect","Knob","knobRef","isDragging","knobPosition","knobColor","knobSize","hideKnob","onMouseDown","onMouseUp","children","trackSize","styles","knob","position","left","top","cursor","zIndex","dragging","pause","animationPlayState","animation","transformOrigin","animationTimingFunction","animationDuration","animationIterationCount","animationName","hide","opacity","style","transform","x","y","onTouchStart","onTouchEnd","ref","width","height","viewBox","fill","fillOpacity","stroke","cx","cy","r","Labels","labelColor","labelBottom","labelFontSize","valueFontSize","appendToValue","prependToValue","verticalOffset","hideLabelValue","selected","label","labels","display","flexDirection","justifyContent","alignItems","color","userSelect","value","fontSize","bottomMargin","marginBottom","appended","right","prepended","Svg","limit","max","labelOffset","activedlabelColor","direction","strokeDasharray","strokeDashoffset","progressColorFrom","progressColorTo","trackColor","doubleLineColor","doubleLineType","progressSize","svgFullPath","radiansOffset","progressLineCap","offsetAngle","data","activedItem","onLableClick","svg","path","doubleLine","text","textAnchor","activedTitle","transition","doubleTrackRef","React","useRef","halfTrack","doubleTrack","contentBorder","maxValue","curveRadian","angleUnit","length","getValue","el","totalValue","current","getTotalLength","overflow","id","x1","x2","offset","stopColor","className","strokeWidth","strokeLinecap","d","map","item","key","xlinkHref","startOffset","onClick","knobOffset","Math","PI","bottom","getOffsetRideans","getSliderRotation","number","getRadians","degrees","generateRange","min","rangeOfNumbers","i","push","CircularSlider","knobDraggable","knobEl","dataIndex","renderLabelValue","onChange","contentWidth","initialState","mounted","radius","radians","dashFullArray","dashFullOffset","circularSlider","lastAngle","dragable","undefined","useReducer","dispatch","setActived","updatedKey","updateState","setKnobPosition","useCallback","offsetRadians","newDegree","pt","getPointAtLength","round","dashOffset","currentPosition","currentPoint","ceil","_","isEqual","random","setTimeout","onMouseMove","event","passive","touch","preventDefault","changedTouches","offsetRelativeToDocument","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","mouseXFromCenter","pageX","mouseYFromCenter","pageY","atan2","addEventListener","e","updatedIndex","dataArrayLength","knobPositionIndex","pointsInCircle","sanitizedLabel","replace","margin","maxWidth","ev","onMouseLeave","onTouchMove","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref4","_ref","svgRef","title","props","ForwardRef","forwardRef","App","wrapper","h3","pre","borderRadius","backgroundColor","padding","slider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b1426c57.chunk.js","sourcesContent":["const reducer = (state, action) => {\n    switch (action.type) {\n        case 'init':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'onMouseDown':\n        case 'onMouseUp':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case 'setInitialKnobPosition':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            throw new Error();\n    }\n};\n\nexport default reducer;\n","import { useState, useEffect } from 'react'\n\nconst useIsServer = () => {\n    const [isServer, setIsServer] = useState(true)\n    useEffect(() => {\n        setIsServer(false)\n    }, [])\n    return isServer\n}\n\nexport default useIsServer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst Knob = ({\n  knobRef,\n  isDragging,\n  knobPosition,\n  knobColor,\n  knobSize,\n  hideKnob,\n  onMouseDown,\n  onMouseUp,\n  trackSize,\n  children,\n}) => {\n  const styles = {\n    knob: {\n      position: \"absolute\",\n      left: `-${knobSize / 2}px`,\n      top: `-${knobSize / 2}px`,\n      cursor: \"grab\",\n      zIndex: 20,\n    },\n\n    dragging: {\n      cursor: \"grabbing\",\n    },\n\n    pause: {\n      animationPlayState: \"paused\",\n    },\n\n    animation: {\n      transformOrigin: \"50% 50%\",\n      animationTimingFunction: \"ease-out\",\n      animationDuration: \"1500ms\",\n      animationIterationCount: \"infinite\",\n      animationName: \"pulse\",\n    },\n\n    hide: {\n      opacity: 0,\n    },\n  };\n\n  const defaultKnobIcon = () => {\n    return (\n      <svg width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 36 36`}>\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"14\" width=\"8\" height=\"1\" />\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"17\" width=\"8\" height=\"1\" />\n        <rect fill=\"#FFFFFF\" x=\"14\" y=\"20\" width=\"8\" height=\"1\" />\n      </svg>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        transform: `translate(${knobPosition.x}px, ${knobPosition.y}px)`,\n        ...styles.knob,\n        ...(isDragging && styles.dragging),\n        ...(hideKnob && styles.hide),\n      }}\n      onMouseDown={onMouseDown}\n      onTouchStart={onMouseDown}\n      onTouchEnd={onMouseUp}\n    >\n      <svg ref={knobRef} width={`${knobSize}px`} height={`${knobSize}px`} viewBox={`0 0 ${knobSize} ${knobSize}`}>\n        <circle\n          style={{ ...styles.animation, ...(isDragging && styles.pause) }}\n          fill={knobColor}\n          fillOpacity=\"0.2\"\n          stroke=\"none\"\n          cx={knobSize / 2}\n          cy={knobSize / 2}\n          r={knobSize / 2}\n        />\n        <circle fill={knobColor} stroke=\"none\" cx={knobSize / 2} cy={knobSize / 2} r={(knobSize * 2) / 3 / 2} />\n        {children ? children : defaultKnobIcon()}\n      </svg>\n    </div>\n  );\n};\n\nKnob.propTypes = {\n  isDragging: PropTypes.bool,\n  knobPosition: PropTypes.object,\n  knobColor: PropTypes.string,\n  knobRadius: PropTypes.number,\n  knobSize: PropTypes.number,\n  trackSize: PropTypes.number,\n  children: PropTypes.element,\n  onMouseDown: PropTypes.func,\n};\n\nexport default Knob;\n","import React from \"react\";\nimport PropTypes, { any } from \"prop-types\";\n\nconst Labels = ({\n  labelColor,\n  labelBottom,\n  labelFontSize,\n  valueFontSize,\n  appendToValue,\n  prependToValue,\n  verticalOffset,\n  hideLabelValue,\n  selected,\n  label,\n}) => {\n  const styles = {\n    labels: {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: `${labelColor}`,\n      userSelect: \"none\",\n      zIndex: 1,\n    },\n\n    value: {\n      fontSize: `${valueFontSize}`,\n      position: \"relative\",\n    },\n\n    bottomMargin: {\n      marginBottom: `calc(${verticalOffset})`,\n    },\n\n    appended: {\n      position: \"absolute\",\n      right: \"0\",\n      top: \"0\",\n      transform: \"translate(100%, 0)\",\n    },\n\n    prepended: {\n      position: \"absolute\",\n      left: \"0\",\n      top: \"0\",\n      transform: \"translate(-100%, 0)\",\n    },\n\n    hide: {\n      display: \"none\",\n    },\n  };\n\n  return (\n    <div style={{ ...styles.labels, ...(hideLabelValue && styles.hide) }}>\n      {labelBottom || <div style={{ fontSize: labelFontSize }}>{label}</div>}\n      <div style={{ ...styles.value, ...(!labelBottom && styles.bottomMargin) }}>\n        <code>\n          <span style={styles.prepended}>{prependToValue}</span>\n          {selected?.value}\n          {selected?.value && <span style={styles.appended}>2{appendToValue}</span>}\n        </code>\n      </div>\n      {labelBottom && <div style={{ fontSize: labelFontSize }}>{label}</div>}\n    </div>\n  );\n};\n\nLabels.propTypes = {\n  label: any,\n  labelColor: PropTypes.string,\n  labelBottom: PropTypes.bool,\n  labelFontSize: PropTypes.string,\n  valueFontSize: PropTypes.string,\n  appendToValue: PropTypes.string,\n  prependToValue: PropTypes.string,\n  verticalOffset: PropTypes.string,\n  hideLabelValue: PropTypes.bool,\n};\n\nexport default Labels;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Svg = ({\n  width,\n  limit,\n  max,\n  label,\n  labelColor,\n  labelFontSize,\n  labelOffset,\n  activedlabelColor,\n  direction,\n  strokeDasharray,\n  strokeDashoffset,\n  progressColorFrom,\n  progressColorTo,\n  trackColor,\n  doubleLineColor,\n  doubleLineType,\n  progressSize,\n  trackSize,\n  svgFullPath,\n  radiansOffset,\n  progressLineCap,\n  offsetAngle,\n  data,\n  activedItem = 0,\n  onLableClick,\n}) => {\n  const styles = {\n    svg: {\n      position: \"relative\",\n      zIndex: 2,\n    },\n\n    path: {\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-1, 1)\" : \"scale(1, 1)\"}`,\n      transformOrigin: \"center center\",\n    },\n    doubleLine: {\n      transform: `rotate(${radiansOffset}rad) ${direction === -1 ? \"scale(-0.9, 0.9)\" : \"scale(0.9, 0.9)\"}`,\n      transformOrigin: \"center center\",\n    },\n    label: {\n      transform: \"translateY(20px)\",\n    },\n    text: {\n      textAnchor: \"middle\",\n      fontSize: labelFontSize,\n      fill: labelColor,\n      cursor: \"pointer\",\n      userSelect: \"none\",\n    },\n    activedTitle: {\n      fill: activedlabelColor,\n      transition: \"all 0.6s ease-in-out\",\n    },\n  };\n\n  const doubleTrackRef = React.useRef(null);\n  const halfTrack = trackSize / 2;\n  const doubleTrack = trackSize;\n  const contentBorder = trackSize * 2.5;\n  const maxValue = (strokeDasharray * (360 - limit)) / 360;\n  const curveRadian = width / 2 + labelOffset;\n  const angleUnit = data ? limit / data.length : 1;\n\n  const getValue = (el, type) => {\n    const totalValue = el.current?.getTotalLength() || 100;\n    if (type === \"track\") {\n      return (totalValue * (360 - limit)) / 360;\n    } else if (type === \"progress\") {\n      return (totalValue * strokeDashoffset) / strokeDasharray;\n    }\n    return totalValue;\n  };\n\n  const getDoubleLineColor = () => {\n    if (doubleLineColor === \"gradiant\") {\n      return \"url(#doubleCircle)\";\n    } else if (doubleLineColor) {\n      return doubleLineColor;\n    }\n  };\n\n  return (\n    <svg\n      width={`${width}px`}\n      height={`${width}px`}\n      viewBox={`0 0 ${width} ${width}`}\n      overflow=\"visible\"\n      style={styles.svg}\n    >\n      <defs>\n        <linearGradient id={label} x1=\"100%\" x2=\"0%\">\n          <stop offset=\"0%\" stopColor={progressColorFrom} />\n          <stop offset=\"100%\" stopColor={progressColorTo} />\n        </linearGradient>\n      </defs>\n      <defs>\n        <linearGradient id={\"doubleCircle\"} x1=\"100%\" x2=\"0%\">\n          <stop offset=\"0%\" stopColor={\"rgba(67, 255, 131, 0.54)\"} />\n          <stop offset=\"25.88%\" stopColor={\"#43FF83\"} />\n          <stop offset=\"54.01%\" stopColor={\"#FFF854\"} />\n          <stop offset=\"79.01%\" stopColor={\"#FF7878\"} />\n          <stop offset=\"100%\" stopColor={\"#FF3737\"} />\n        </linearGradient>\n      </defs>\n\n      <path\n        className=\"background-circle\"\n        style={styles.path}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={maxValue}\n        strokeWidth={1}\n        stroke={null}\n        strokeLinecap={progressLineCap}\n        fill=\"transparent\"\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - contentBorder}\n            a ${width / 2 - contentBorder},${width / 2 - contentBorder} 0 0,1 0,${width - contentBorder * 2}\n            a -${width / 2 - contentBorder},-${width / 2 - contentBorder} 0 0,1 0,-${width - contentBorder * 2}\n        `}\n      />\n\n      {doubleLineColor && (\n        <path\n          className=\"double-track\"\n          ref={doubleTrackRef}\n          style={styles.path}\n          strokeDasharray={getValue(doubleTrackRef)}\n          strokeDashoffset={getValue(doubleTrackRef, doubleLineType)}\n          strokeWidth={trackSize}\n          stroke={getDoubleLineColor()}\n          strokeLinecap={progressLineCap}\n          fill=\"none\"\n          d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - doubleTrack}\n            a ${width / 2 - doubleTrack},${width / 2 - doubleTrack} 0 0,1 0,${width - doubleTrack * 2}\n            a -${width / 2 - doubleTrack},-${width / 2 - doubleTrack} 0 0,1 0,-${width - doubleTrack * 2}\n        `}\n        />\n      )}\n\n      <path\n        className=\"track-line\"\n        style={styles.path}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={maxValue}\n        strokeWidth={trackSize}\n        stroke={trackColor}\n        strokeLinecap={progressLineCap}\n        fill=\"none\"\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n      />\n\n      {/* {doubleLineColor && (\n        <path\n          style={styles.doubleLine}\n          strokeDasharray={strokeDasharray}\n          strokeDashoffset={strokeDashoffset}\n          strokeWidth={progressSize}\n          strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\n          fill=\"none\"\n          stroke={doubleLineColor}\n          d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n        />\n      )} */}\n\n      <path\n        style={styles.path}\n        ref={svgFullPath}\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={strokeDashoffset}\n        strokeWidth={progressSize}\n        strokeLinecap={progressLineCap !== \"round\" ? \"butt\" : \"round\"}\n        fill=\"none\"\n        stroke={`url(#${label})`}\n        d={`\n            M ${width / 2}, ${width / 2}\n            m 0, -${width / 2 - halfTrack}\n            a ${width / 2 - halfTrack},${width / 2 - halfTrack} 0 0,1 0,${width - halfTrack * 2}\n            a -${width / 2 - halfTrack},-${width / 2 - halfTrack} 0 0,1 0,-${width - halfTrack * 2}\n        `}\n      />\n\n      <path\n        id=\"myTextPath\"\n        d={`\n          M ${curveRadian},${curveRadian} m ${-curveRadian}, 0  \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 -${curveRadian},0 \n          A ${curveRadian},${curveRadian} 0 0 1 0,-${curveRadian} \n          A ${curveRadian},${curveRadian} 0 0 1 0,${curveRadian}\n        `}\n        transform={`translate(${width / 2},${width / 2})`}\n        fill=\"none\"\n        stroke=\"none\"\n      />\n\n      <text style={styles.text}>\n        {data?.map((item, key) => (\n          <textPath\n            xlinkHref=\"#myTextPath\"\n            startOffset={`${(angleUnit * key + angleUnit / 2 - offsetAngle) / 3.6}%`}\n            key={key}\n          >\n            <tspan style={(key === activedItem - 1 && styles.activedTitle) || {}} onClick={() => onLableClick(key + 1)}>\n              {item.value}\n            </tspan>\n          </textPath>\n        ))}\n      </text>\n    </svg>\n  );\n};\n\nSvg.propTypes = {\n  width: PropTypes.number,\n  label: PropTypes.string,\n  direction: PropTypes.number,\n  svgFullPath: PropTypes.object,\n  strokeDasharray: PropTypes.number,\n  strokeDashoffset: PropTypes.number,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressLineCap: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  radiansOffset: PropTypes.number,\n};\n\nexport default Svg;\n","import React, { useEffect, useReducer, useCallback, useRef } from \"react\";\nimport window from \"global\";\nimport PropTypes, { any } from \"prop-types\";\nimport reducer from \"../redux/reducer\";\nimport useIsServer from \"../hooks/useIsServer\";\nimport Knob from \"../Knob\";\nimport Labels from \"../Labels\";\nimport Svg from \"../Svg\";\nimport _ from \"lodash\";\n\nconst spreadDegrees = 360;\nconst knobOffset = {\n  top: Math.PI / 2,\n  right: 0,\n  bottom: -Math.PI / 2,\n  left: -Math.PI,\n};\n\nconst timeout = (delay) => {\n  return new Promise((res) => setTimeout(res, delay));\n};\nconst getOffsetRideans = (knobPosition, offsetAngle) => {\n  return knobOffset[knobPosition] + (offsetAngle / 180) * Math.PI;\n};\n\nconst getSliderRotation = (number) => {\n  if (number < 0) return -1;\n  return 1;\n};\n\nconst getRadians = (degrees) => {\n  return (degrees * Math.PI) / 180;\n};\n\nconst generateRange = (min, max) => {\n  let rangeOfNumbers = [];\n  for (let i = min; i <= max; i++) {\n    rangeOfNumbers.push(i);\n  }\n  return rangeOfNumbers;\n};\n\nconst CircularSlider = ({\n  label = \"SERVICES\",\n  width = 280,\n  direction = 1,\n  min = 0,\n  max = 360,\n  limit = 360,\n  offsetAngle = -45,\n  knobColor = \"#4e63ea\",\n  knobSize = 36,\n  knobPosition = \"top\",\n  hideKnob = false,\n  knobDraggable = true,\n  knobEl = null,\n  labelBottom = false,\n  labelColor = \"#272b77\",\n  labelFontSize = \"1rem\",\n  labelOffset = 20,\n  activedlabelColor = \"#c54a1b\",\n  valueFontSize = \"3rem\",\n  appendToValue = \"\",\n  prependToValue = \"\",\n  verticalOffset = \"1.5rem\",\n  hideLabelValue = false,\n  progressColorFrom = \"#80C3F3\",\n  progressColorTo = \"#4990E2\",\n  progressSize = 8,\n  trackColor = \"#DDDEFB\",\n  trackSize = 8,\n  doubleLineColor = \"gradiant\",\n  doubleLineType=\"progress\",\n  data = [],\n  dataIndex = 0,\n  progressLineCap = \"round\",\n  renderLabelValue = null,\n  onChange = (value) => {},\n}) => {\n  const contentWidth = width - 2 * labelOffset;\n  const initialState = {\n    mounted: false,\n    isDragging: false,\n    contentWidth: contentWidth,\n    radius: contentWidth / 2,\n    knobPosition: knobPosition,\n    label: 0,\n    data: data,\n    radians: 0,\n    offset: 0,\n    knob: {\n      x: 0,\n      y: 0,\n    },\n    dashFullArray: 0,\n    dashFullOffset: 0,\n  };\n\n  const circularSlider = useRef(null);\n  const knobRef = useRef(null);\n  const svgFullPath = useRef(null);\n  const lastAngle = useRef(0);\n  const processFlag = useRef(false);\n  const dragable = useRef(undefined);\n  const isServer = useIsServer();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [activedItem, setActived] = React.useState(null);\n  const [updatedKey, updateState] = React.useState(null);\n\n  // eslint-disable-next-line\n  const microSlide = async ({ degrees, pointsInCircle, offset }) => {\n    if (processFlag.current) return;\n    processFlag.current = true;\n\n    const step = 10;\n    let startPoint = lastAngle.current - pointsInCircle / 2;\n    const distance = Math.abs(degrees - startPoint);\n    const stepDrection = degrees > startPoint ? 1 : -1;\n    const stepCount = Math.round(distance / step);\n\n    if (stepCount < 1) {\n      processFlag.current = false;\n      return;\n    }\n\n    for (let i = 1; i <= stepCount; i++) {\n      startPoint += step * stepDrection;\n      await timeout(100);\n\n      if (Math.abs(startPoint - degrees) < step) {\n        processFlag.current = false;\n        startPoint = degrees;\n      }\n\n      const radians = getRadians(startPoint) - getOffsetRideans(state.knobPosition, offsetAngle);\n      setKnobPosition(radians + offset * getSliderRotation(direction));\n      if (!processFlag.current) {\n        return;\n      }\n    }\n  };\n\n  const setKnobPosition = useCallback(\n    (radians) => {\n      if(!state.dashFullArray) {\n        updateState(Math.random());\n        return;\n      }\n      const offsetRadians = radians + getOffsetRideans(knobPosition, offsetAngle);\n      let degrees = (offsetRadians > 0 ? offsetRadians : 2 * Math.PI + offsetRadians) * (spreadDegrees / (2 * Math.PI));\n\n      if (!activedItem && degrees > limit) {\n        degrees = 0;\n        if (dragable.current === undefined) {\n          dragable.current = false;\n        } else {\n          return;\n        }\n      } else if (knobPosition === \"bottom\" && degrees > limit) {\n        degrees = limit;\n        dragable.current = false;\n        return;\n      } else if (knobPosition === \"top\" && degrees < 360 - limit) {\n        degrees = 360 - limit;\n        dragable.current = false;\n        return;\n      }\n      \n      let newDegree = (degrees || 1.3) + 225;\n      newDegree = newDegree > 360 ? newDegree - 360 : newDegree;\n      let pt = svgFullPath.current.getPointAtLength((newDegree * state.dashFullArray) / 360);\n      pt.x = Math.round(pt.x);\n      pt.y = Math.round(pt.y);\n\n      // change direction\n      const dashOffset = (degrees / spreadDegrees) * state.dashFullArray;\n      degrees = getSliderRotation(direction) === -1 ? spreadDegrees - degrees : degrees;\n      lastAngle.current = degrees;\n      knobRef.current.style = `transform: rotate(${degrees + offsetAngle}deg);`;\n      const pointsInCircle = state.data.length / limit;\n      const currentPosition = degrees * pointsInCircle;\n      let currentPoint = currentPosition > 0.1 ? Math.ceil(currentPosition) : 0;\n\n      setActived(currentPoint);\n\n      if (!_.isEqual(state.data[currentPoint - 1], state.label)) {\n        onChange(state.data[currentPoint - 1]);\n      }\n\n      dispatch({\n        type: \"setKnobPosition\",\n        payload: {\n          dashFullOffset:\n            getSliderRotation(direction) === -1\n              ? dashOffset\n              : (state.dashFullArray || svgFullPath.current.getTotalLength()) - dashOffset,\n          label: state.data[currentPoint - 1],\n          knob: {\n            x: pt.x, // + Math.cos(radians) * 0\n            y: pt.y, // + Math.sin(radians) * 0\n          },\n        },\n      });\n    },\n    // eslint-disable-next-line\n    [\n      offsetAngle,\n      limit,\n      state.dashFullArray,\n      state.radius,\n      state.data,\n      state.label,\n      knobPosition,\n      trackSize,\n      direction,\n      onChange,\n    ]\n  );\n\n  const onMouseDown = () => {\n    dragable.current = true;\n    dispatch({\n      type: \"onMouseDown\",\n      payload: {\n        isDragging: true,\n      },\n    });\n  };\n\n  const onMouseUp = () => {\n    dragable.current = false;\n    dispatch({\n      type: \"onMouseUp\",\n      payload: {\n        isDragging: false,\n      },\n    });\n\n    setTimeout(() => {\n      updateState(Math.random());\n    }, 200);\n  };\n\n  const onMouseMove = useCallback(\n    (event, passive = false) => {\n      if (!dragable.current) return;\n\n      if (passive) event.preventDefault();\n\n      let touch;\n      if (event.type === \"touchmove\") {\n        touch = event.changedTouches[0];\n      }\n\n      const offsetRelativeToDocument = (ref) => {\n        const rect = ref.current.getBoundingClientRect();\n        const scrollLeft = !isServer && ((window?.pageXOffset ?? 0) || (document?.documentElement?.scrollLeft ?? 0));\n        const scrollTop = !isServer && ((window?.pageYOffset ?? 0) || (document?.documentElement?.scrollTop ?? 0));\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n      };\n\n      const mouseXFromCenter =\n        (event.type === \"touchmove\" ? touch.pageX : event.pageX) -\n        (offsetRelativeToDocument(circularSlider).left + state.radius);\n      const mouseYFromCenter =\n        (event.type === \"touchmove\" ? touch.pageY : event.pageY) -\n        (offsetRelativeToDocument(circularSlider).top + state.radius);\n\n      const radians = Math.atan2(mouseYFromCenter, mouseXFromCenter);\n\n      setKnobPosition(radians);\n    },\n    [state.radius, setKnobPosition, isServer]\n  );\n\n  // Get svg path length onmount\n  useEffect(() => {\n    circularSlider.current.addEventListener(\n      \"touchmove\",\n      function (e) {\n        onMouseMove(e, true);\n      },\n      { passive: false }\n    );\n\n    dispatch({\n      type: \"init\",\n      payload: {\n        mounted: true,\n        data: state.data.length ? [...state.data] : [...generateRange(min, max)],\n        dashFullArray: svgFullPath.current.getTotalLength ? svgFullPath.current.getTotalLength() : 0,\n      },\n    });\n\n    // eslint-disable-next-line\n  }, [max, min]);\n\n  // Set knob position\n  useEffect(() => {\n    let updatedIndex = activedItem === null ? dataIndex : activedItem;\n    const dataArrayLength = state.data.length;\n    const knobPositionIndex = updatedIndex > dataArrayLength ? dataArrayLength : updatedIndex;\n\n    if (!!dataArrayLength) {\n      const pointsInCircle = limit / dataArrayLength;\n      const offset = getRadians(pointsInCircle) / 2;\n\n      dispatch({\n        type: \"setInitialKnobPosition\",\n        payload: {\n          radians: Math.PI / 2 - getOffsetRideans(state.knobPosition, offsetAngle),\n          offset,\n        },\n      });\n\n      const degrees = getSliderRotation(direction) * knobPositionIndex * pointsInCircle;\n      const radians = getRadians(degrees) - getOffsetRideans(state.knobPosition, offsetAngle);\n\n      if (!knobPositionIndex) {\n        return setKnobPosition(radians);\n      }\n      return setKnobPosition(radians - offset * getSliderRotation(direction));\n    }\n\n    // eslint-disable-next-line\n  }, [state.dashFullArray, state.knobPosition, state.data.length, dataIndex, direction, updatedKey]);\n\n  const sanitizedLabel = label.replace(/[\\W_]/g, \"_\");\n\n  const styles = {\n    circularSlider: {\n      position: \"relative\",\n      display: \"inline-block\",\n      opacity: 0,\n      transition: \"opacity 1s ease-in\",\n      margin: `${labelOffset + 25}px`,\n      maxWidth: `${width}px`,\n    },\n    value: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      zIndex: 3,\n    },\n    mounted: {\n      opacity: 1,\n    },\n  };\n\n  return (\n    <div\n      style={{ ...styles.circularSlider, ...(state.mounted && styles.mounted) }}\n      ref={circularSlider}\n      onMouseMove={(ev) => onMouseMove(ev)}\n      onMouseUp={() => onMouseUp()}\n      onMouseLeave={() => onMouseUp()}\n      onTouchMove={onMouseMove}\n    >\n      <Svg\n        width={contentWidth}\n        limit={limit}\n        max={max}\n        label={sanitizedLabel}\n        labelOffset={labelOffset}\n        direction={direction}\n        strokeDasharray={state.dashFullArray}\n        strokeDashoffset={state.dashFullOffset || 100}\n        svgFullPath={svgFullPath}\n        progressSize={progressSize}\n        progressColorFrom={progressColorFrom}\n        progressColorTo={progressColorTo}\n        progressLineCap={progressLineCap}\n        doubleLineColor={doubleLineColor}\n        doubleLineType={doubleLineType}\n        trackColor={trackColor}\n        trackSize={trackSize}\n        radiansOffset={state.radians}\n        offsetAngle={offsetAngle}\n        labelColor={labelColor}\n        labelFontSize={labelFontSize}\n        activedlabelColor={activedlabelColor}\n        data={data}\n        activedItem={activedItem}\n        onLableClick={(id) => {\n          setActived(id);\n          updateState(Math.random());\n        }}\n      />\n      {knobDraggable && (\n        <Knob\n          knobRef={knobRef}\n          isDragging={state.isDragging}\n          knobPosition={{ x: state.knob.x, y: state.knob.y }}\n          knobSize={knobSize > trackSize ? knobSize : trackSize}\n          knobColor={knobColor}\n          trackSize={trackSize}\n          hideKnob={hideKnob}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n        >\n          {knobEl}\n        </Knob>\n      )}\n      {renderLabelValue ? (\n        <div style={styles.value}>{renderLabelValue}</div>\n      ) : (\n        <Labels\n          label={label}\n          labelColor={labelColor}\n          labelBottom={labelBottom}\n          labelFontSize={labelFontSize}\n          verticalOffset={verticalOffset}\n          valueFontSize={valueFontSize}\n          appendToValue={appendToValue}\n          prependToValue={prependToValue}\n          hideLabelValue={hideLabelValue}\n          selected={state.label}\n        />\n      )}\n    </div>\n  );\n};\n\nCircularSlider.propTypes = {\n  label: any,\n  width: PropTypes.number,\n  direction: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  doubleLineColor: PropTypes.string,\n  doubleLineType: PropTypes.string,\n  knobColor: PropTypes.string,\n  knobPosition: PropTypes.string,\n  hideKnob: PropTypes.bool,\n  knobDraggable: PropTypes.bool,\n  knobEl: PropTypes.element,\n  labelColor: PropTypes.string,\n  labelBottom: PropTypes.bool,\n  labelFontSize: PropTypes.string,\n  valueFontSize: PropTypes.string,\n  appendToValue: PropTypes.string,\n  renderLabelValue: PropTypes.element,\n  prependToValue: PropTypes.string,\n  verticalOffset: PropTypes.string,\n  hideLabelValue: PropTypes.bool,\n  progressLineCap: PropTypes.string,\n  progressColorFrom: PropTypes.string,\n  progressColorTo: PropTypes.string,\n  progressSize: PropTypes.number,\n  trackColor: PropTypes.string,\n  trackSize: PropTypes.number,\n  data: PropTypes.array,\n  dataIndex: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nexport default CircularSlider;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 28.9083,\n  cy: 28.4802,\n  r: 26.6119,\n  transform: \"rotate(175.907 28.9083 28.4802)\",\n  fill: \"#5215FC\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M28.6488 36.8894L34.2765 30.7679L22.5273 31.2617L28.6488 36.8894Z\",\n  fill: \"#FFC801\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M28.3551 20.259L22.7274 26.3806L34.4766 25.8867L28.3551 20.259Z\",\n  fill: \"#FFC801\"\n});\n\nvar SvgSlide = function SvgSlide(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 58,\n    height: 57,\n    viewBox: \"0 0 58 57\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSlide, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/slide.2c07837d.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport CircularSlider from \"./CircularSlider\";\n// import { ReactComponent as DragIcon } from './assets/arrow.svg';\nimport { ReactComponent as SlideIcon } from \"./assets/slide.svg\";\n\nconst App = () => {\n  const styles = {\n    wrapper: {\n      margin: \"2rem\",\n    },\n\n    h3: {\n      margin: \"3rem 0 2rem 0\",\n    },\n\n    pre: {\n      fontSize: \"0.9rem\",\n      borderRadius: \"0.3rem\",\n      backgroundColor: \"#eeeeee\",\n      padding: \"0.5rem\",\n    },\n\n    slider: {\n      padding: \"0 0 0.5rem 0\",\n    },\n  };\n\n  return (\n    <div style={styles.wrapper}>\n      <h3 style={styles.h3}>\n        Anticlockwise rotation with the knob positioned to the right and \"°\" appended to the value:\n      </h3>\n      <div style={styles.slider}>\n        <CircularSlider\n          width={400}\n          limit={270}\n          offsetAngle={-45}\n          labelOffset={20}\n          direction={1}\n          data={[\n            {\n              key: 1,\n              value: \"STAFFING\",\n            },\n            {\n              key: 2,\n              value: \"TEAM\",\n            },\n            {\n              key: 1,\n              value: \"PROJECT\",\n            },\n            {\n              key: 1,\n              value: \"MANAGED\",\n            },\n          ]}\n          knobPosition=\"bottom\"\n          valueFontSize=\"2rem\"\n          renderLabelValue={null}\n          progressLineCap=\"flat\"\n          progressSize={16}\n          progressColorFrom={\"#5215FC\"}\n          progressColorTo={\"#280885\"}\n          doubleLineType={\"track\"}\n          trackColor=\"#a9a9a9\"\n          trackSize={16}\n          knobColor=\"blue\"\n          knobSize={56}\n        ></CircularSlider>\n      </div>\n      <pre className={styles.pre}>\n        {`<CircularSlider\n  width={400}\n  limit={270}\n  offsetAngle={-45}\n  labelOffset={20}\n  direction={1}\n  data={[\n    {\n      key: 1,\n      value: \"STAFFING\",\n    },\n    {\n      key: 2,\n      value: \"TEAM\",\n    },\n    {\n      key: 1,\n      value: \"PROJECT\",\n    },\n    {\n      key: 1,\n      value: \"MANAGED\",\n    }\n  ]}\n  knobPosition=\"bottom\"\n  valueFontSize=\"2rem\"\n  renderLabelValue={null}\n  progressLineCap=\"flat\"\n  progressSize={24}\n  trackColor=\"#eeeeee\"\n  trackSize={24}\n  knobColor = \"blue\"\n  knobSize= {56}\n/>`}\n      </pre>\n      <h3 className={styles.h3}>A custom knob icon and the label on the bottom and double progress line</h3>\n      <div className={styles.slider}>\n        <CircularSlider\n          width={400}\n          limit={270}\n          offsetAngle={-45}\n          labelOffset={20}\n          direction={1}\n          data={[\n            {\n              key: 1,\n              value: \"STAFFING\",\n            },\n            {\n              key: 2,\n              value: \"TEAM\",\n            },\n            {\n              key: 1,\n              value: \"PROJECT\",\n            },\n            {\n              key: 1,\n              value: \"MANAGED\",\n            },\n          ]}\n          knobPosition=\"bottom\"\n          valueFontSize=\"2rem\"\n          renderLabelValue={null}\n          progressLineCap=\"flat\"\n          progressSize={16}\n          progressColorFrom={\"#5215FC\"}\n          progressColorTo={\"#280885\"}\n          doubleLineType=\"progress\"\n          trackColor=\"#a9a9a9\"\n          trackSize={16}\n          knobColor=\"blue\"\n          knobSize={40}\n          knobEl={<SlideIcon width={40} height={40} />}\n        ></CircularSlider>\n      </div>\n      <pre className={styles.pre}>\n        {`import { ReactComponent as PowerIcon } from './assets/power.svg';\n.\n.\n.\n<CircularSlider\nwidth={400}\nlimit={270}\noffsetAngle={-45}\nlabelOffset={20}\ndirection={1}\ndata={[\n  {\n    key: 1,\n    value: \"STAFFING\",\n  },\n  {\n    key: 2,\n    value: \"TEAM\",\n  },\n  {\n    key: 1,\n    value: \"PROJECT\",\n  },\n  {\n    key: 1,\n    value: \"MANAGED\",\n  }\n]}\nknobPosition=\"bottom\"\nvalueFontSize=\"2rem\"\nrenderLabelValue={null}\nprogressLineCap=\"flat\"\nprogressSize={16}\nprogressColorFrom={'#5215FC'}\nprogressColorTo={'#280885'}\ndoubleLineType=\"progress\"\ntrackColor=\"#a9a9a9\"\ntrackSize={16}\nknobColor = \"blue\"\nknobSize= {40}\nknobEl={<SlideIcon width={40} height={40} />}\n>\n</CircularSlider>`}\n      </pre>\n      <h3 className={styles.h3}>\n        A flat line cap with the track size smaller than the progress track size and a smiley knob:\n      </h3>\n      <div className={styles.slider}>\n        {/* <CircularSlider\n          label=\"Alphabet\"\n          progressLineCap=\"flat\"\n          dataIndex={1}\n          max={270}\n          width={250}\n          labelColor=\"#212121\"\n          valueFontSize=\"6rem\"\n          verticalOffset=\"1rem\"\n          knobColor=\"#212121\"\n          progressColorFrom=\"#ff8500\"\n          progressColorTo=\"#a15400\"\n          progressSize={12}\n          trackColor=\"#eeeeee\"\n          trackSize={10}\n          data={\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")}\n        >\n          <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n        </CircularSlider> */}\n      </div>\n      <pre className={styles.pre}>\n        {`\nimport { ReactComponent as EmojiIcon } from './assets/emoji.svg';\n.\n.\n.\n<CircularSlider\n    width={200}\n    progressLineCap=\"flat\"\n    dataIndex={1}\n    label=\"Alphabet\"\n    data=[\"A\",\"B\",\"C\"]//...\n    labelColor=\"#212121\"\n    valueFontSize=\"6rem\"\n    verticalOffset=\"1rem\"\n    knobColor=\"#212121\"\n    progressColorFrom=\"#ff8500\"\n    progressColorTo=\"#a15400\"\n    progressSize={8}\n    trackColor=\"#eeeeee\"\n    trackSize={4}\n>\n    <EmojiIcon x=\"9\" y=\"9\" width=\"18px\" height=\"18px\" />\n</CircularSlider>`}\n      </pre>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}